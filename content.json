{"meta":{"title":"blue's blog","subtitle":"coding is funny.","description":"记录着blue的技术生涯--前端,后端,服务器遇到的各种问题以及感悟的博客","author":"blue","url":"https://chanran.github.io"},"pages":[{"title":"","date":"2016-10-31T12:06:20.044Z","updated":"2016-10-31T12:06:20.044Z","comments":false,"path":"categories/index.html","permalink":"https://chanran.github.io/categories/index.html","excerpt":"","text":""},{"title":"","date":"2016-11-01T05:22:25.021Z","updated":"2016-11-01T05:22:25.021Z","comments":false,"path":"tags/index.html","permalink":"https://chanran.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"[转载]计算机常用英语术语、词汇表","slug":"转载-计算机专业术语","date":"2016-11-12T07:48:15.000Z","updated":"2016-11-12T08:35:44.302Z","comments":true,"path":"2016/11/12/转载-计算机专业术语/","link":"","permalink":"https://chanran.github.io/2016/11/12/转载-计算机专业术语/","excerpt":"","text":"转载自计算机常用英语术语、词汇表 Computer Vocabulary In Common Use一、硬件类(Hardware)二、软件类(Software)三、网络类(Network)四、其它 CPU(Center Processor Unit)中央处理单元mainboard主板RAM(random accessmemory)随机存储器(内存)ROM(Read Only Memory)只读存储器Floppy Disk软盘Hard Disk硬盘CD-ROM光盘驱动器(光驱)monitor监视器keyboard键盘mouse鼠标chip芯片CD-R光盘刻录机HUB集线器Modem= MOdulator-DEModulator,调制解调器P-P(Plug and Play)即插即用UPS(Uninterruptable Power Supply)不间断电源BIOS(Basic-input-OutputSystem)基本输入输出系统CMOS(Complementary Metal-Oxide-Semiconductor)互补金属氧化物半导体setup安装uninstall卸载wizzard向导OS(Operation Systrem)操作系统OA(Office AutoMation)办公自动化exit退出edit编辑copy复制cut剪切paste粘贴delete删除select选择find查找select all全选replace替换undo撤消redo重做program程序license许可(证)back前一步next下一步finish结束folder文件夹Destination Folder目的文件夹user用户click点击double click双击right click右击settings设置update更新release发布data数据data base数据库DBMS(Data Base ManegeSystem)数据库管理系统view视图insert插入object对象configuration配置command命令document文档POST(power-on-self-test)电源自检程序cursor光标attribute属性icon图标service pack服务补丁option pack功能补丁Demo演示short cut快捷方式exception异常debug调试previous前一个column行row列restart重新启动text文本font字体size大小scale比例interface界面function函数access访问manual指南active激活computer language计算机语言menu菜单GUI(graphical userinterfaces )图形用户界面template模版page setup页面设置password口令code密码print preview打印预览zoom in放大zoom out缩小pan漫游cruise漫游full screen全屏tool bar工具条status bar状态条ruler标尺table表paragraph段落symbol符号style风格execute执行graphics图形image图像Unix用于服务器的一种操作系统Mac OS苹果公司开发的操作系统OO(Object-Oriented)面向对象virus病毒file文件open打开colse关闭new新建save保存exit退出clear清除default默认LAN局域网WAN广域网Client/Server客户机/服务器ATM( AsynchronousTransfer Mode)异步传输模式Windows NT微软公司的网络操作系统Internet互联网WWW(World Wide Web)万维网protocol协议HTTP超文本传输协议FTP文件传输协议Browser浏览器homepage主页Webpage网页website网站URL在Internet的WWW服务程序上用于指定信息位置的表示方法Online在线Email电子邮件ICQ网上寻呼Firewall防火墙Gateway网关HTML超文本标识语言hypertext超文本hyperlink超级链接IP(Address)互联网协议(地址)SearchEngine搜索引擎TCP/IP用于网络的一组通讯协议Telnet远程登录IE(Internet Explorer)探索者(微软公司的网络浏览器)Navigator引航者(网景公司的浏览器)multimedia多媒体ISO国际标准化组织ANSI美国国家标准协会able 能activefile 活动文件addwatch 添加监视点allfiles 所有文件allrightsreserved 所有的权力保留altdirlst 切换目录格式andfixamuchwiderrangeofdiskproblems 并能够解决更大范围内的磁盘问题andotherinFORMation 以及其它的信息archivefileattribute 归档文件属性assignto 指定到autoanswer 自动应答autodetect 自动检测autoindent 自动缩进autosave 自动存储availableonvolume 该盘剩余空间badcommand 命令错badcommandorfilename 命令或文件名错batchparameters 批处理参数binaryfile 二进制文件binaryfiles 二进制文件borlandinternational borland国际公司bottommargin 页下空白bydate 按日期byextension 按扩展名byname 按名称bytesfree 字节空闲callstack 调用栈casesensitive 区分大小写causespromptingtoconfirmyouwanttooverwritean 要求出现确认提示,在你想覆盖一个centralpointsoftwareinc central point 软件股份公司changedirectory 更换目录changedrive 改变驱动器changename 更改名称characterset 字符集checkingfor 正在检查checksadiskanddisplaysastatusreport 检查磁盘并显示一个状态报告chgdrivepath 改变盘/路径 node 节点npasswd UNIX的一种代理密码检查器，在提交给密码文件前，它将对潜在的密码进行筛选。OSPF 开放最短路径优先协议OSI Model 开放系统互连模式out-of-band attack 带外攻击packet filter 分组过滤器password 口令path 路径payload 净负荷PBX 专用交换机PCS 个人通信业务peer 对等permission 权限plaintext 明文PPTP 点到点隧道协议port 端口prority 优先权protocol 协议potential browser 潜在浏览器POP 互联网电子邮件协议标准是Post Office Protocol 的缩写，是互联网电子邮件协议标准。我们可以通过有POP服务功能的主机传送及接收电子邮件。该协议的缺陷是，当你接收电子邮件时，所有的信件都从服务器上清除，下载到你的本地硬盘。当然也有一些客户端程序可以将电子邮件留在服务器上，或设置成超过一定大小的文件不可下载。随着邮件采用多媒体格式，邮件会越来越大，我们希望能够灵活掌握下载什么文件、何时下载，这就需要IMAP 协议。目前POP的版本为POP3。process 进程proxy 代理proxy server 代理服务器代理服务就是代理Web用户去取得资料回来，通常使用WWW软件要去连结远方的终端取得资料时，必须送出要求信号然后再一个字节一个字节的传送回来。有了proxy的设定以后，要求资料的信号会先送到Proxy Server。当Proxy Server得到用户的请求时，首先会到cache中寻找有没有同样的资料，如果有，就由Proxy Server直接将资料传给用户，如果cache没有资料，Proxy Server就会利用网络上所可以使用的频宽，到远端站台取回资料，一边储存在cache中，一边传送给用户。即使线路阻塞，还是比用户自己直接抓取要来得快速的。paseudorandom 伪随机phreaking 指控制电话系统的过程RAS 远程访问服务Remote control 远程控制RPC 远程过程调用remote boot 远程引导route 路由router 路由器routing 路由选择RIP 路由选择信息协议routed daemon 一种利用RIP的UNIX寻径服务routing table 路由表R.U.P 路由更新协议RSA 一种公共密匙加密算法。而RSA也许是最流行的。script 脚本search engine 搜索引擎SSL 安全套接层secure 密码SID 安全标识符sender 发送者SLIP 串行线网际协议server 服务器server-based network 基于服务器的网络session layer 会话层share、sharing 共享share-level security 共享级安全性SMTP 简单邮件传送协议SNMP 简单网络管理协议Site 站点SCSI 小型计算机系统接口snffer 检错器snooping 探听standalone server 独立服务器strong cipher 强密码stream cipher 流密码strong password 强口令SQL 结构化查询语言subnet mask 子网掩码subdirectory 子目录subnet 子网swap file 交换文件SACL 系统访问控制表S/Key 安全连接的一次性密码系统，在S/Key中，密码从不会经过网络发送，因此不可能被窃取。sniffer（嗅探器） 秘密捕获穿过网络的数据报文的程序，黑客一般用它来设法盗取用户名和密码的。spoofing（电子欺骗） 任何涉及假扮其他用户或主机以对目标进行未授权访问的过程time bomb（时间炸弹） 指等待某一特定时间或事件出先才激活，从而导致机器故障的程序TCPDUMP 是UNIX中捕获数据包的实用工具，常被用语获得详细的网络通信记录的。Traceroute 一个UNIX上的常用TCP程序，用语跟踪本机和远程主机之间的路由T0,DS0 56或者64kbpsT1,DS1 24路PCM数字话，总速率为1.544MbpsT3,DS3 28个T1信道，作品能够速率为44.736Mbpsthin client 瘦客户机thread 线程throughput 吞吐量transport layer 传输量Transport Protocol 传输协议trust 信任tunnel 安全加密链路vector of attack 攻击向量Virtual directory 虚目录Virtual Machine 虚拟机VRML 虚拟现实模型语言volume 文件集vulnerability 脆弱性weak passwurd 弱口令well-known ports 通用端口workstation 工作站X.25 一种分组交换网协议zone transfer 区域转换 authentication 认证、鉴别authorization 授权Back Office Microsoft公司的一种软件包Back up 备份backup browser 后备浏览器BDC 备份域控制器baseline 基线BIOS 基本输入/输出系统Binding 联编、汇集bit 比特、二进制位BOOTP 引导协议BGP 引导网关协议Bottleneck 瓶径bridge 网桥、桥接器browser 浏览器browsing 浏览channel 信道、通路CSU/DSU 信道服务单元/数字服务单元Checksum 校验和Cluster 簇、群集CGI 公共网关接口CGI（Common Gateway Interface公用网关接口是一个可以产生相同结果或结果随用户输入而变化的程序。它可以用一种解释性的界面语言编写，也可以用一种编译方式的编程语言编写。CGI规定了Web服务器调用其它可执行程序的接口协议标准。Web服务器通过调用CGI程序实现和Web浏览器的交互，也就是CGI程序接受Web浏览器发送给Web服务器的信息，进行处理，并将响应结果再回送给Web服务器和Web浏览器。CGI程序一般完成Web网页中表单数据的处理、数据库查询和实现与传统应用系统的集成等工作。CGI程序虽然可以用任何程序设计语言编写，但是用C语言编写的CGI程序具有执行速度快、安全性高等特点。CGI-based attack（基于CGI攻击）它利用公共网关接口的脆弱点进行攻击，通常借助www站点进行crash（崩溃） 系统突然失效，需要从新引导CD-ROM 只读型光盘Component 组件data link 数据链路datagram 数据报default document 缺省文档digital key system 数字键控系统disk mirroring 磁盘镜像distributed file system 分布式文件系统data-driven attack（数据驱动攻击）依靠隐藏或者封装数据进行的攻击，那些数据可不被察觉的通过防火墙。DNS spoofing（域名服务器电子欺骗）攻击者用来损害域名服务器的方法，可通过欺骗DNS的高速缓存或者内应攻击来实现的一种方式（通常为攻击者假扮合法的DNS服务器角色）DoS（嘿嘿，可不是DOS哦，这个是deniad of service，极为服务拒绝）用户恶意使用网络信息服务器时，将拒绝为合法的用户提供服务。eavesdropping 窃听、窃取encrypted tunnel 加密通道enterprise network 企业网Ethernet 以太网External security 外部安全性environment variable 环境变量fax modem 传真猫file attribute 文件属性file system 文件系统file 文件FORM 格式fragments 分段frame relay 桢中继firewall 防火墙Firework(防火墙)是加强加 Internet 与 Intranetp(内部网)之间安全防范的一个或一组系统。防火墙可以确定哪些内部服务允许外部访问，哪些外人被许可访问所允许的内部服务，那些外部服务可由内部人员访问。为了使防火墙发挥效力，来自和发往 Internet 的所有信息都必须经由防火墙出入。防火墙只允许授权信息通过，而防火墙本身不能被渗透。gated daemon gated进程（好象是一种早期的UNIX寻径服务）gateway 网关global account 全局帐号global group 全局组group 组group account 组帐号group identifier 组标识符HCL 硬件兼容性表hash 散表HPFS 高性能文件系统Home directory 主目录home page 竹叶hop 驿站、中继段host 主机hyperlink 超文本链接highjacking 劫持终端，即为攻击者捕获另一个用户会话的控制。这是很少发生的，一旦发生就表明目标的安全性已经被破坏。其实NetXRay在这一点就做的很好。HTPASSWD 一种用密码来保护WWW(UNIX)上的站点的系统icon 图标impersonation attack 伪装攻击index server 索引服务器ISA 工业标准结构Inherieted Rights Filter 继承权限过滤器ISDN 综合业务数字网interactive user 交互性用户intermediate system 中介系统internal security 内部安全性Internet Explorer（IE） IBM的万维网浏览器Internet server 因特网服务器Interpreter 解释程序intranet 内联网，企业内部网intruder 入 侵 者IMAP 一种邮件协议是Internet Message Access Protocal 的缩写。IMAP 提供了一个在远程服务器上管理邮件的手段，它与POP 协议相似，但功能比POP 要多，功能包括：只下载邮件的标题、建立多个邮箱和在服务器上建立保存邮件的文件夹。Java Virtual Machine Java虚拟机java script 基于Java语言的一种脚本语言jack in 一句黑客常用的口语，意思为破坏服务器安全的行为kernel 内核keys 密钥keyspace 密钥空间Keystroke Recorder（按键记录器） 一些用语窃取他人用户名和密码的工具LAN Server 局域网服务器Local security 局部安全性log 日志、记录logging 登录logoff 退出、注销logical port 逻辑端口logon 注册logon script 登录脚本LFN 长文件名logic bomb（逻辑炸弹）一种可导致系统加锁或者故障的程序或代码。mass browser 主浏览器MAPI是Messaging Application Progrmming Interface 的缩写。微软和其它一些公司开发了MAPI，可使Windows 应用程序接入到从Microsoft Mail 到Novell MHS的多种消息系统。但是， MAPI仅限于在日常工作的水平上工作，即感知邮件的应用程序，它可在网络上交换邮件与数据。member server 成员服务器menu 菜单message 消息multilink 多链接MIME 多媒体Internet邮件扩展MPR 多协议路由器multiprocessing 多重处理Module 模块multihomed host 多穴主机MUDMUD的英文全名是Multiple User Dimension、Multiple User Dialogue或Multiple User Dungeon，译为“多人世界”、“多人对话”或“多人地牢”，俗称“泥巴”游戏。named pipes 命名管道NDS NetWare目录服务NetBEUI NetBIOS扩展用户接口NetBIOS gateway NetBIOS网关NetWare 网络操作系统（不好意思，我忘了是那个公司开发的了）network 网络NetBIOS 网络基本输入/输出系统NDIS 网络驱动程序接口规范NetDDE 网络动态数据交换NIC 网络接口卡network layer 网络层Network Monitor 一个网络监控程序network operating system 网络操作系统network printer 网络打印机network security 网络安全network user 网络用户NFS 网络文件系统 我把网络安全方面的专业词汇整理了一下，虽然大多是乱谈，但初衷在于初学者能更好的了解这些词汇。不全和错误的地方还望高手补充：Access Control List（ACL） 访问控制列表access token 访问令牌account lockout 帐号封锁account policies 记帐策略accounts 帐号adapter 适配器adaptive speed leveling 自适应速率等级调整Address Resolution Protocol(ARP) 地址解析协议Administrator account 管理员帐号ARPANET 阿帕网（internet的前身）algorithm 算法alias 别名allocation 分配、定位alias 小应用程序allocation layer 应用层API 应用程序编程接口anlpasswd 一种与Passwd+相似的代理密码检查器applications 应用程序ATM 异步传递模式attack 攻击audio policy 审记策略auditing 审记、监察back-end 后端borde 边界borde gateway 边界网关breakabie 可破密的breach 攻破、违反cipher 密码ciphertext 密文CAlass A domain A类域CAlass B domain B类域CAlass C domain C类域classless addressing 无类地址分配cleartext 明文CSNW Netware客户服务client 客户，客户机client/server 客户机/服务器code 代码COM port COM口（通信端口）CIX 服务提供者computer name 计算机名crack 闯入cryptanalysis 密码分析DLC 数据链路控制decryption 解密database 数据库dafault route 缺省路由dafault share 缺省共享denial of service 拒绝服务dictionary attack 字典式攻击directory 目录directory replication 目录复制domain 域domain controller 域名控制器domain name 域名域名其实就是入网计算机的名字，它的作用就象寄信需要写明人们的名字、地址一样重要。域名结构如下：计算机主机名.机构名.网络名.最高层域名。域名用文字表达，比用数字表达的IP地址容易记忆。加入Internet的各级网络依照DNS的命名规则对本网内的计算机命名，并负责完成通讯时域名到IP地址的转换 。DNS 域名服务器DNS(Domain Name System,域名系统)是指在 Internet上查询域名或IP地址的目录服务系统。在接收到请求时，它可将另一台主机的域名翻译为IP地址，或反之。大部分域名系统都维护着一个大型的数据库，它描述了域名与 IP地址的对应关系，并且这个数据库被定期地更新。翻译请求通常来自网络上的另一台计算机，它需要IP地址以便进行路由选择。DDE 动态数据交换DHCP 动态主机配置协议encryption 加密EGP 外部网关协议FDDI 光纤分布式数据接口FAT 文件分配表FTP(File Transfer Protocol） 文件传送协议filter 过滤器firmware 固件flooding 淹没GSNW NetWare网关服务GDI(graphical device interface) 图形设备界面GUI 图形用户界面HTML 超文本标记语言HTTP 超文本传送协议IGP 内部安全性ICMP(Internet Control Message Protocol) 网际控制报文协议ICMP用来发送关于IP数据报传输的控制和错误信息的TCP/IP协议。当一个IP数据报不能传送到目的地时，可能是因为目的地的机器暂停服务或者信息交通阻塞，路由器可能使用ICMP将失败信息通知发送者。IGMP（Internet Group Management Protocol，Internet群组管理协议）这种TCP/IP协议允许Internet主机参加多点播送（multicasting）—-一种向计算机群广播信息的有效手段IIS 信息服务器IP(Internet Protocol) 网际协议IRC 网上交谈ISP 网络服务提供者IPX 互连网分组协议IPC 进程间通信IRQ 中断请求IP address IP地址IP地址称作网络协议地址，是分配给主机的一个32位地址，由4个字节组成，分为动态IP地址和静态IP地址两种。动态IP地址指的是每次连线所取得的地址不同，而静态IP地址是指每次连线均为同样固定的地址。一般情况下，以电话拨号所取得的地址均为动态的，也就是每次所取得的地址不同。IP masquerade IP伪装IP spoofing IP欺骗LAN 局域网LPC 局部过程调用NNTP 网络新闻传送协议PPP 点到点协议称为点对点通信协议(Point to Point Protocol)，是为适应那些不能在网络线上的使用者，通过电话线的连接而彼此通信所制定的协议。PDC 主域控制器Telnet 远程登陆TCP/IP 传输控制协议/网际协议TCP/IP通信协议主要包含了在Internet上网络通信细节的标准，以及一组网络互连的协议和路径选择算法。TCP是传输控制协议，相当于物品装箱单，保证数据在传输过程中不会丢失。IP是网间协议，相当于收发货人的地址和姓名，保证数据到达指定的地点。TFTP 普通文件传送协议TFTP是无盘计算机用来传输信息的一种简化的FTP协议。它非常之简单，所以可固化在硬盘上，而且支持无认证操作。TFTP是一种非常不安全的协议。Trojan Horse 特洛伊木马URL 统一资源定位器UDP 用户数据报协议VDM 虚拟DOS机UUCP 是一种基于猫的使用已经很久的文件传输协议，有时候还使用它在Internet上传输Usenet新闻和E-mail，尤其是在那些间断性联网的站点上。现在很少站提供匿名的UUCP来存取文件。而它做为一种文件传输协议，只有那些没有入网而使用猫的用户使用此方法。WWW 万维网WWW(Word Wide Web)是Internet最新的一种信息服务。它是一种基于超文本文件的交互式浏览检索工具。用户可用WWW在Internet网上浏览、传递、编辑超文本格式的文件。WAN 广域网virtual server 虚拟服务器Usenet用户交流网Usenet是网络新闻服务器的主要信息来源。Usenet完全是一个民间自发建立的，使用Internet交换信息但又不完全依赖Internet进行通讯的用户交流网络。使用Usenet的自愿者共同遵守一些约定的网络使用规则。USER name 用户名USER account 用户帐号Web page 网页OpenGL 开放图形语言ODBC 开放数据库连接PCI 外设连接接口 chooseoneofthefollowing 从下列中选一项clearall 全部清除clearallbreakpoints 清除所有断点clearsanattribute 清除属性clearscommandhistory 清除命令历史clearscreen 清除屏幕closeall 关闭所有文件codegeneration 代码生成colorpalette 彩色调色板commandline 命令行commandprompt 命令提示符compressedfile 压缩文件configuresaharddiskforusewithmsdos 配置硬盘,以为 MS-DOS 所用conventionalmemory 常规内存copiesdirectoriesandsubdirectoriesexceptemptyones 拷贝目录和子目录,空的除外copiesfileswiththearchiveattributeset 拷贝设置了归档属性的文件copiesoneormorefilestoanotherlocation 把文件拷贝或搬移至另一地方copiesthecontentsofonefloppydisktoanother 把一个软盘的内容拷贝到另一个软盘上copydiskette 复制磁盘copymovecompfindrenamedeletevervieweditattribwordpprintlist C拷贝M移动 O比 F搜索R改名 D删除 V版本 E浏览A属性 W写字 P打印 L列表copyrightc 版权(ccreatedospartitionorlogicaldosdrive 创建DOS分区或逻辑DOS驱动器createextendeddospartition 创建扩展DOS分区createlogicaldosdrivesintheextendeddospartition 在扩展DOS分区中创建逻辑DOS驱动器createprimarydospartition 创建DOS主分区createsadirectory 创建一个目录createschangesordeletesthevolumelabelofadisk 创建,改变或删除磁盘的卷标currentfile 当前文件currentfixeddiskdrive 当前硬盘驱动器currentsettings 当前设置currenttime 当前时间cursorposition 光标位置defrag 整理碎片dele 删去deletepartitionorlogicaldosdrive 删除分区或逻辑DOS驱动器deletesadirectoryandallthesubdirectoriesandfilesinit 删除一个目录和所有的子目录及其中的所有文件deltree 删除树devicedriver 设备驱动程序dialogbox 对话栏directionkeys 方向键directly 直接地directorylistargument 目录显示变量directoryof 目录清单directorystructure 目录结构diskaccess 磁盘存取diskcopy 磁盘拷贝diskservicescopycomparefindrenameverifyvieweditmaplocateinitialize 磁盘服务功能: C拷贝 O比较 F搜索R改卷名V校验 浏览E编缉M图 L找文件 N格式化diskspace 磁盘空间displayfile 显示文件displayoptions 显示选项displaypartitioninFORMation 显示分区信息displaysfilesinspecifieddirectoryandallsubdirectories 显示指定目录和所有目录下的文件displaysfileswithspecifiedattributes 显示指定属性的文件displaysorchangesfileattributes 显示或改变文件属性displaysorsetsthedate 显示或设备日期displayssetupscreensinmonochromeinsteadofcolor 以单色而非彩色显示安装屏信息displaystheamountofusedandfreememoryinyoursystem 显示系统中已用和未用的内存数量displaysthefullpathandnameofeveryfileonthedisk 显示磁盘上所有文件的完整路径和名称displaysthenameoforchangesthecurrentdirectory 显示或改变当前目录doctor 医生doesn 不doesntchangetheattribute 不要改变属性dosshell DOS 外壳doubleclick 双击doyouwanttodisplaythelogicaldriveinFORMationyn 你想显示逻辑驱动器信息吗(y/n)?driveletter 驱动器名editmenu 编辑选单emsmemory ems内存endoffile 文件尾endofline 行尾enterchoice 输入选择entiredisk 转换磁盘environmentvariable 环境变量esc esceveryfileandsubdirectory 所有的文件和子目录existingdestinationfile 已存在的目录文件时expandedmemory 扩充内存expandtabs 扩充标签explicitly 明确地extendedmemory 扩展内存fastest 最快的fatfilesystem fat 文件系统fdiskoptions fdisk选项fileattributes 文件属性fileFORMat 文件格式filefunctions 文件功能fileselection 文件选择fileselectionargument 文件选择变元filesin 文件在filesinsubdir 子目录中文件fileslisted 列出文件filespec 文件说明filespecification 文件标识filesselected 选中文件findfile 文件查寻fixeddisk 硬盘fixeddisksetupprogram 硬盘安装程序fixeserrorsonthedisk 解决磁盘错误floppydisk 软盘FORMatdiskette 格式化磁盘FORMatsadiskforusewithmsdos 格式化用于MS-DOS的磁盘FORMfeed 进纸freememory 闲置内存fullscreen 全屏幕functionprocedure 函数过程graphical 图解的graphicslibrary 图形库groupdirectoriesfirst 先显示目录组hangup 挂断harddisk 硬盘hardwaredetection 硬件检测hasbeen 已经helpfile 帮助文件helpindex 帮助索引helpinFORMation 帮助信息helppath 帮助路径helpscreen 帮助屏helptext 帮助说明helptopics 帮助主题helpwindow 帮助窗口hiddenfile 隐含文件hiddenfileattribute 隐含文件属性hiddenfiles 隐含文件howto 操作方式ignorecase 忽略大小写inbothconventionalanduppermemory 在常规和上位内存incorrectdos 不正确的DOSincorrectdosversion DOS 版本不正确indicatesabinaryfile 表示是一个二进制文件indicatesanasciitextfile 表示是一个ascii文本文件insertmode 插入方式insteadofusingchkdsktryusingscandisk 请用scandisk,不要用chkdskinuse 在使用invaliddirectory 无效的目录is 是kbytes 千字节keyboardtype 键盘类型labeldisk 标注磁盘laptop 膝上largestexecutableprogram 最大可执行程序largestmemoryblockavailable 最大内存块可用lefthanded 左手习惯leftmargin 左边界linenumber 行号linenumbers 行号linespacing 行间距listbyfilesinsortedorder 按指定顺序显示文件listfile 列表文件listof 清单locatefile 文件定位lookat 查看lookup 查找macroname 宏名字makedirectory 创建目录memoryinfo 内存信息memorymodel 内存模式menubar 菜单条menucommand 菜单命令menus 菜单messagewindow 信息窗口microsoft 微软microsoftantivirus 微软反病毒软件microsoftcorporation 微软公司mini 小的modemsetup 调制解调器安装modulename 模块名monitormode 监控状态monochromemonitor 单色监视器moveto 移至multi 多newdata 新建数据newer 更新的newfile 新文件newname 新名称newwindow 新建窗口norton nortonnostack 栈未定义noteusedeltreecautiously 注意:小心使用deltreeonlinehelp 联机求助optionally 可选择地or 或pageframe 页面pagelength 页长pausesaftereachscreenfulofinFORMation 在显示每屏信息后暂停一下pctools pc工具postscript 附言prefixmeaningnot 前缀意即”不prefixtoreverseorder 反向显示的前缀presetswitchesbyprefixinganyswitchwithhyphenforexamplew 用前缀和放在短横线-后的开关(例如/-w)预置开关pressakeytoresume 按一键继续pressanykeyforfilefunctions 敲任意键执行文件功能pressentertokeepthesamedate 敲回车以保持相同的日期pressentertokeepthesametime 敲回车以保持相同的时间pressesctocontinue 敲esc继续pressesctoexit 敲键退出pressesctoexitfdisk 敲esc退出fdiskpressesctoreturntofdiskoptions 敲esc返回fdisk选项previously 在以前printall 全部打印printdevice 打印设备printerport 打印机端口processesfilesinalldirectoriesinthespecifiedpath 在指定的路径下处理所有目录下的文件programfile 程序文件programmingenvironment 程序设计环境promptsyoubeforecreatingeachdestinationfile 在创建每个目标文件时提醒你promptsyoutopressakeybeforecopying 在拷贝前提示你敲一下键pulldown 下拉pulldownmenus 下拉式选单quickFORMat 快速格式化quickview 快速查看readonlyfile 只读文件readonlyfileattribute 只读文件属性readonlyfiles 只读文件readonlymode 只读方式redial 重拨repeatlastfind 重复上次查找reportfile 报表文件resize 调整大小respectively 分别地rightmargin 右边距rootdirectory 根目录runsdebugaprogramtestingandeditingtool 运行debug, 它是一个测试和编辑工具runtimeerror 运行时出错saveall 全部保存saveas 另存为scandisk 磁盘扫描程序scandiskcanreliablydetect scandisk可以可靠地发现screencolors 屏幕色彩screenoptions 屏幕任选项screensaver 屏幕暂存器screensavers 屏幕保护程序screensize 屏幕大小scrollbars 翻卷栏scrolllockoff 滚屏已锁定searchfor 搜索sectorspertrack 每道扇区数selectgroup 选定组selectionbar 选择栏setactivepartition 设置活动分区setupoptions 安装选项shortcutkeys 快捷键showclipboard 显示剪贴板singleside 单面sizemove 大小/移动sorthelp S排序H帮助sortorder 顺序specialservicesdirectorymaint 特殊服务功能: D目录维护specifiesdrivedirectoryandorfilestolist 指定要列出的驱动器,目录,和文件specifiesthatyouwanttochangetotheparentdirectory 指定你想把父目录作为当前目录specifiesthedirectoryandorfilenameforthenewfile 指定新文件的目录或文件名specifiesthefileorfilestobecopied 指定要拷贝的文件stackoverflow 栈溢出standalone 独立的startupoptions 启动选项statusline 状态行stepover 单步summaryof 摘要信息suppressespromptingtoconfirmyouwanttooverwritean 取消确认提示,在你想覆盖一个swapfile 交换文件switchesmaybepresetinthedircmdenvironmentvariable 开关可在dircmd环境变量中设置switchto 切换到sync 同步systemfile 系统文件systemfiles 系统文件systeminfo 系统信息systeminFORMation 系统信息程序tableofcontents 目录terminalemulation 终端仿真terminalsettings 终端设置testfile 测试文件testfileparameters 测试文件参数theactivewindow 激活窗口theswitchymaybepresetinthecopycmdenvironmentvariable /y开关可以在copycmd环境变量中预置thetwofloppydisksmustbethesametype 两个软磁盘必须是同种类型的thismaybeoverriddenwithyonthecommandline 在命令行输入/-y可以使之无效togglebreakpoint 切换断点tomsdos 转到MS-DOStopmargin 页面顶栏turnoff 关闭typecddrivetodisplaythecurrentdirectoryinthespecifieddrive 键入cd驱动器:显示指定驱动器的当前目录typecdwithoutparameterstodisplaythecurrentdriveanddirectory 键入无参数的cd以显示当前驱动器的当前目录typedatewithoutparameterstodisplaythecurrentdatesettingand 键入无参数的date,显示当前日期设置和unmark 取消标记unselect 取消选择usesbareFORMat 使用简洁方式useslowercase 使用小写useswidelistFORMat 使用宽行显示usinghelp 使用帮助verbosely 冗长地verifiesthatnewfilesarewrittencorrectly 校验新文件是否正确写入了videomode 显示方式viewwindow 内容浏览viruses 病毒vision 景象vollabel 卷标volumelabel 卷标volumeserialnumberis 卷序号是windowshelp windows 帮助wordwrap 整字换行workingdirectory 正在工作的目录worm 蠕虫writemode 写方式writeto 写到xmsmemory 扩充内存youmay 你可以","categories":[{"name":"翻译","slug":"翻译","permalink":"https://chanran.github.io/categories/翻译/"}],"tags":[{"name":"计算机术语","slug":"计算机术语","permalink":"https://chanran.github.io/tags/计算机术语/"}],"keywords":[{"name":"翻译","slug":"翻译","permalink":"https://chanran.github.io/categories/翻译/"}]},{"title":"[转载]web前端开发培训之前端开发必会的二十五个知识点","slug":"转载-web前端开发培训之前端开发必会的二十五个知识点","date":"2016-11-11T14:24:02.000Z","updated":"2016-11-12T04:10:53.092Z","comments":true,"path":"2016/11/11/转载-web前端开发培训之前端开发必会的二十五个知识点/","link":"","permalink":"https://chanran.github.io/2016/11/11/转载-web前端开发培训之前端开发必会的二十五个知识点/","excerpt":"","text":"转载自 web前端开发培训之前端开发必会的二十五个知识点 通用常用那几种浏览器测试？有哪些内核(Layout Engine)?(Q1) 浏览器：IE，Chrome，FireFox，Safari，Opera。(Q2) 内核：Trident，Gecko，Presto，Webkit。 说下行内元素和块级元素的区别？行内块元素的兼容性使用？（IE8 以下） (Q1) 行内元素：会在水平方向排列，不能包含块级元素，设置width无效，height无效(可以设置line-height)，margin上下无效，padding上下无效。块级元素：各占据一行，垂直方向排列。从新行开始结束接着一个断行。 (Q2) 兼容性：display:inline-block;*display:inline;*zoom:1; 清除浮动有哪些方式？比较好的方式是哪一种？ (Q1) （1）父级div定义height。 （2）结尾处加空div标签clear:both。 （3）父级div定义伪类:after和zoom。 （4）父级div定义overflow:hidden。 （5）父级div定义overflow:auto。 （6）父级div也浮动，需要定义宽度。 （7）父级div定义display:table。 （8）结尾处加br标签clear:both。 (Q2) 比较好的是第3种方式，好多网站都这么用。 box-sizing常用的属性有哪些？分别有什么作用？ (Q1)box-sizing: content-box|border-box|inherit; (Q2)content-box:宽度和高度分别应用到元素的内容框。在宽度和高度之外绘制元素的内边距和边框(元素默认效果)。border-box:元素指定的任何内边距和边框都将在已设定的宽度和高度内进行绘制。通过从已设定的宽度和高度分别减去边框和内边距才能得到内容的宽度和高度。 Doctype作用？标准模式与兼容模式各有什么区别? (Q1) &lt;!DOCTYPE&gt;告知浏览器的解析器用什么文档标准解析这个文档。DOCTYPE不存在或格式不正确会导致文档以兼容模式呈现。 (Q2) 标准模式的排版和JS运作模式都是以该浏览器支持的最高标准运行。在兼容模式中，页面以宽松的向后兼容的方式显示,模拟老式浏览器的行为以防止站点无法工作。 HTML5 为什么只需要写 &lt;!DOCTYPE HTML&gt;？HTML5不基于 SGML，因此不需要对DTD进行引用，但是需要doctype来规范浏览器的行为（让浏览器按照它们应该的方式来运行）。而HTML4.01基于SGML,所以需要对DTD进行引用，才能告知浏览器文档所使用的文档类型。 页面导入样式时，使用link和@import有什么区别？ （1）link属于XHTML标签，除了加载CSS外，还能用于定义RSS, 定义rel连接属性等作用；而@import是CSS提供的，只能用于加载CSS; （2）页面被加载的时，link会同时被加载，而@import引用的CSS会等到页面被加载完再加载; （3）import是CSS2.1 提出的，只在IE5以上才能被识别，而link是XHTML标签，无兼容问题。 介绍一下你对浏览器内核的理解？主要分成两部分：渲染引擎(layout engineer或Rendering Engine)和JS引擎。 渲染引擎：负责取得网页的内容（HTML、XML、图像等等）、我们组建一大牛裙前面是4七一，整理讯息（例如加入CSS等），中间是零2七，以及计算网页的显示方式，后面是壹武四，是学习的就加，不是学习的请勿打扰。然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。所有网页浏览器、电子邮件客户端以及其它需要编辑、显示网络内容的应用程序都需要内核。 JS引擎则：解析和执行javascript来实现网页的动态效果。 最开始渲染引擎和JS引擎并没有区分的很明确，后来JS引擎越来越独立，内核就倾向于只指渲染引擎。 html5有哪些新特性？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？ (Q1) HTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。 (1)绘画 canvas; (2)用于媒介回放的 video 和 audio 元素; (3)本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失; (4)sessionStorage 的数据在浏览器关闭后自动删除; (5)语意化更好的内容元素，比如 article、footer、header、nav、section; (6)表单控件，calendar、date、time、email、url、search; (7)新的技术webworker, websocket, Geolocation; (Q2) IE8/IE7/IE6支持通过document.createElement方法产生的标签，可以利用这一特性让这些浏览器支持HTML5新标签，浏览器支持新标签后，还需要添加标签默认的样式。当然也可以直接使用成熟的框架、比如html5shim， 12&lt;!--[if lt IE 9]&gt;&lt;![endif]--&gt; 简述一下你对HTML语义化的理解？ 用正确的标签做正确的事情。html语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析;即使在没有样式CSS情况下也以一种文档格式显示，并且是容易阅读的;搜索引擎的爬虫也依赖于HTML标记来确定上下文和各个关键字的权重，利于SEO;使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。 JavaScript介绍js的基本数据类型 Undefined、Null、Boolean、Number、String js有哪些内置对象？ 数据封装类对象：Object、Array、Boolean、Number 和 String其他对象：Function、Arguments、Math、Date、RegExp、Error this对象的理解 this总是指向函数的直接调用者（而非间接调用者）；如果有new关键字，this指向new出来的那个对象；在事件中，this指向触发这个事件的对象，特殊的是，IE中的attachEvent中的this总是指向全局对象Window。 eval是做什么的？ 它的功能是把对应的字符串解析成JS代码并运行；应该避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）。由JSON字符串转换为JSON对象的时候可以用eval，var obj =eval(‘(‘+ str +’)’)。 DOM怎样添加、移除、移动、复制、创建和查找节点&gt;12345678910111213// 创建新节点createDocumentFragment() //创建一个DOM片段createElement() //创建一个具体的元素createTextNode() //创建一个文本节点// 添加、移除、替换、插入appendChild()removeChild()replaceChild()insertBefore() //在已有的子节点前插入一个新的子节点// 查找getElementsByTagName() //通过标签名称getElementsByName() //通过元素的Name属性的值(IE容错能力较强，会得到一个数组，其中包括id等于name值的)getElementById() //通过元素Id，唯一性 null和undefined的区别？ null是一个表示”无”的对象，转为数值时为0；undefined是一个表示”无”的原始值，转为数值时为NaN。 undefined： （1）变量被声明了，但没有赋值时，就等于undefined。 （2) 调用函数时，应该提供的参数没有提供，该参数等于undefined。 （3）对象没有赋值的属性，该属性的值为undefined。 （4）函数没有返回值时，默认返回undefined。 null： （1） 作为函数的参数，表示该函数的参数不是对象。 （2） 作为对象原型链的终点。 new操作符具体干了什么呢? （1）创建一个空对象，并且 this 变量引用该对象，同时还继承了该函数的原型。 （2）属性和方法被加入到 this 引用的对象中。 （3）新创建的对象由 this 所引用，并且最后隐式的返回 this 。 JSON 的了解？ JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。它是基于JavaScript的一个子集。数据格式简单, 易于读写, 占用带宽小。 格式：采用键值对，例如：{‘age’:’12’, ‘name’:’back’} call() 和 apply() 的区别和作用？ apply()函数有两个参数：第一个参数是上下文，第二个参数是参数组成的数组。如果上下文是null，则使用全局对象代替。 如：function.apply(this,[1,2,3]); call()的第一个参数是上下文，后续是实例传入的参数序列。如：function.call(this,1,2,3); 如何获取UA？123456function whatBrowser() &#123; document.Browser.Name.value=navigator.appName; document.Browser.Version.value=navigator.appVersion; document.Browser.Code.value=navigator.appCodeName; document.Browser.Agent.value=navigator.userAgent; &#125; 其他 HTTP状态码知道哪些？ 100 Continue 继续，一般在发送post请求时，已发送了http header之后服务端将返回此信息，表示确认，之后发送具体参数信息 200 OK 正常返回信息 201 Created 请求成功并且服务器创建了新的资源 202 Accepted 服务器已接受请求，但尚未处理 301 Moved Permanently 请求的网页已永久移动到新位置。 302 Found 临时性重定向。 303 See Other 临时性重定向，且总是使用 GET 请求新的 URI。 304 Not Modified 自从上次请求后，请求的网页未修改过。 400 Bad Request 服务器无法理解请求的格式，客户端不应当尝试再次使用相同的内容发起请求。 401 Unauthorized 请求未授权。 403 Forbidden 禁止访问。 404 Not Found 找不到如何与 URI 相匹配的资源。 500 Internal Server Error 最常见的服务器端错误。 503 Service Unavailable 服务器端暂时无法处理请求（可能是过载或维护）。 你有哪些性能优化的方法？ （1） 减少http请求次数：CSS Sprites, JS、CSS源码压缩、图片大小控制合适；网页Gzip，CDN托管，data缓存 ，图片服务器。 （2） 前端模板 JS+数据，减少由于HTML标签导致的带宽浪费，前端用变量保存AJAX请求结果，每次操作本地变量，不用请求，减少请求次数 （3） 用innerHTML代替DOM操作，减少DOM操作次数，优化javascript性能。 （4） 当需要设置的样式很多时设置className而不是直接操作style。 （5） 少用全局变量、缓存DOM节点查找的结果。减少IO读取操作。 （6） 避免使用CSS Expression（css表达式)又称Dynamic properties(动态属性)。 （7） 图片预加载，将样式表放在顶部，将脚本放在底部 加上时间戳。 什么叫优雅降级和渐进增强？ 优雅降级：Web站点在所有新式浏览器中都能正常工作，如果用户使用的是老式浏览器，则代码会检查以确认它们是否能正常工作。由于IE独特的盒模型布局问题，针对不同版本的IE的hack实践过优雅降级了,为那些无法支持功能的浏览器增加候选方案，使之在旧式浏览器上以某种形式降级体验却不至于完全失效。 渐进增强：从被所有浏览器支持的基本功能开始，逐步地添加那些只有新式浏览器才支持的功能,向页面增加无害于基础浏览器的额外样式和功能的。当浏览器支持时，它们会自动地呈现出来并发挥作用。 哪些常见操作会造成内存泄漏？ 内存泄漏指任何对象在您不再拥有或需要它之后仍然存在。垃圾回收器定期扫描对象，并计算引用了每个对象的其他对象的数量。如果一个对象的引用数量为 0（没有其他对象引用过该对象），或对该对象的惟一引用是循环的，那么该对象的内存即可回收。setTimeout 的第一个参数使用字符串而非函数的话，会引发内存泄漏。闭包、控制台日志、循环（在两个对象彼此引用且彼此保留时，就会产生一个循环）。 线程与进程的区别 一个程序至少有一个进程,一个进程至少有一个线程。线程的划分尺度小于进程，使得多线程程序的并发性高。另外，进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率。 线程在执行过程中与进程还是有区别的。每个独立的线程有一个程序运行的入口、顺序执行序列和程序的出口。但是线程不能够独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制。 从逻辑角度来看，多线程的意义在于一个应用程序中，有多个执行部分可以同时执行。但操作系统并没有将多个线程看做多个独立的应用，来实现进程的调度和管理以及资源分配。这就是进程和线程的重要区别。","categories":[{"name":"面试","slug":"面试","permalink":"https://chanran.github.io/categories/面试/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://chanran.github.io/tags/前端/"},{"name":"面试","slug":"面试","permalink":"https://chanran.github.io/tags/面试/"}],"keywords":[{"name":"面试","slug":"面试","permalink":"https://chanran.github.io/categories/面试/"}]},{"title":"重构页面遇到的各种奇怪问题","slug":"重构页面遇到的各种奇怪问题","date":"2016-11-11T13:22:38.000Z","updated":"2016-11-11T13:45:08.451Z","comments":true,"path":"2016/11/11/重构页面遇到的各种奇怪问题/","link":"","permalink":"https://chanran.github.io/2016/11/11/重构页面遇到的各种奇怪问题/","excerpt":"","text":"记录一下干货 怎样可以很好地保证网页的浏览器兼容性 特定html标签相关的奇怪问题 textarea 123456&lt;textarea cols=&quot;30&quot; rows=&quot;10&quot;&gt;&lt;/textarea&gt; &lt;!--推荐这样写--&gt;&lt;textarea cols=&quot;30&quot; rows=&quot;10&quot;&gt; &lt;!--会出现几个空格--&gt;&lt;/textarea&gt;&lt;textarea cols=&quot;30&quot; rows=&quot;10&quot;&gt; &lt;!--换行之后有几个空格--&gt;&lt;/textarea&gt; chrome下第二个textarea会出现几个空格,第三个textarea会换行再加几个空格,所以最好使用第一个textarea的写法句号 (其他浏览器有空切换到windows测试) css相关的奇怪问题 行内块元素之间的奇怪间隔 以span为例(设置了display:inline-block) 12345678910111213141516171819202122232425262728293031&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style&gt; html,body,div&#123; height:100%; width:100%; &#125; #span1&#123; display:inline-block; width:45%; height:100%; background-color:black; &#125; #span2&#123; display:inline-block; width:45%; height:100%; background-color:red; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div&gt; &lt;span id=&quot;span1&quot;&gt;&lt;/span&gt; &lt;span id=&quot;span2&quot;&gt;&lt;/span&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 左图出现奇怪的间距(元素换行之后会有一个换行符),右图是解决之后的状态 解决方法 把行内块元素写一在同一行 (不推荐,如果元素多的话太长了,可读性差) 123&lt;div&gt; &lt;span id=&quot;span1&quot;&gt;&lt;/span&gt;&lt;span id=&quot;span2&quot;&gt;&lt;/span&gt;&lt;/div&gt; 加注释(推荐) 1234&lt;div&gt; &lt;span id=&quot;span1&quot;&gt;&lt;/span&gt;&lt;!-- --&gt;&lt;span id=&quot;span2&quot;&gt;&lt;/span&gt;&lt;/div&gt; 用浮动(不推荐,脱离文本流了,弄起来有点麻烦)","categories":[{"name":"css","slug":"css","permalink":"https://chanran.github.io/categories/css/"}],"tags":[{"name":"重构","slug":"重构","permalink":"https://chanran.github.io/tags/重构/"},{"name":"css","slug":"css","permalink":"https://chanran.github.io/tags/css/"},{"name":"html","slug":"html","permalink":"https://chanran.github.io/tags/html/"}],"keywords":[{"name":"css","slug":"css","permalink":"https://chanran.github.io/categories/css/"}]},{"title":"stylus预处理入门(三)--插值","slug":"stylus预处理入门三插值","date":"2016-11-01T05:56:17.000Z","updated":"2016-11-01T06:27:31.454Z","comments":true,"path":"2016/11/01/stylus预处理入门三插值/","link":"","permalink":"https://chanran.github.io/2016/11/01/stylus预处理入门三插值/","excerpt":"","text":"插值(interporation) 插值相当于解析表达式或者变量，让它们的值替换插值的位置。注： 不能用于属性值的插值（但属性值可以使用变量替换）。 在css属性名中使用插值 1234partOfProp = radiusvalue = 10pxdiv border-&#123;partOfProp&#125; value /*切记属性值这里不可以使用插值*/ 转化：123div &#123; border-radius: 10px;&#125; 在选择器中使用插值 12345selector = divpartOfProp = radiusvalue = 10px&#123;selector&#125; border-&#123;partOfProp&#125; value 转化：123div &#123; border-radius: 10px;&#125; 1234selectors = &apos;#foo,#bar,.baz&apos;&#123;selectors&#125; background: #000 转化：12345#foo,#bar,.baz &#123; background: #000;&#125; 高级使用：与mixins配合使用 12345678910111213vendor(prop, args) -webkit-&#123;prop&#125; args -moz-&#123;prop&#125; args &#123;prop&#125; argsborder-radius() vendor(&apos;border-radius&apos;, arguments)box-shadow() vendor(&apos;box-shadow&apos;, arguments)button border-radius 1px 2px / 3px 4px 转化12345button &#123; -webkit-border-radius: 1px 2px / 3px 4px; -moz-border-radius: 1px 2px / 3px 4px; border-radius: 1px 2px / 3px 4px;&#125; 高级使用：与循环迭代(iteration)配合使用 1234table for row in 1 2 3 4 5 tr:nth-child(&#123;row&#125;) height: 10px * row 转化：123456789101112131415table tr:nth-child(1) &#123; height: 10px;&#125;table tr:nth-child(2) &#123; height: 20px;&#125;table tr:nth-child(3) &#123; height: 30px;&#125;table tr:nth-child(4) &#123; height: 40px;&#125;table tr:nth-child(5) &#123; height: 50px;&#125; QUOTE: If you are not moving ahead , you are falling behind.","categories":[{"name":"css","slug":"css","permalink":"https://chanran.github.io/categories/css/"}],"tags":[{"name":"css","slug":"css","permalink":"https://chanran.github.io/tags/css/"},{"name":"stylus","slug":"stylus","permalink":"https://chanran.github.io/tags/stylus/"},{"name":"预处理器","slug":"预处理器","permalink":"https://chanran.github.io/tags/预处理器/"},{"name":"前端","slug":"前端","permalink":"https://chanran.github.io/tags/前端/"}],"keywords":[{"name":"css","slug":"css","permalink":"https://chanran.github.io/categories/css/"}]},{"title":"stylus预处理入门(二)--变量","slug":"stylus预处理入门二变量","date":"2016-11-01T05:54:34.000Z","updated":"2016-11-01T06:27:22.134Z","comments":true,"path":"2016/11/01/stylus预处理入门二变量/","link":"","permalink":"https://chanran.github.io/2016/11/01/stylus预处理入门二变量/","excerpt":"","text":"变量(variables) 变量的标识符可以由$、下划线、字母、数字组成，其中数字不能作为变量的开头。其实这里的变量只是理解为单纯的字符替换 外部定义变量：12345_font-size = 14pxfont = _font-size &quot;Lucida Grande&quot;, Arialbody font font, sans-serif 转化：123body &#123; font: 14px &quot;Lucida Grande&quot;, Arial, sans-serif;&#125; 下面是变量的另外一种用法，不在外部定义变量: 内部重新定义当前变量 12345#logo width: w = 150px height: h = 80px margin-left: (w / 2) margin-top: (h / 2) /*注意括号一定要加上*/ 转化：123456#logo &#123; width: 150px; height: 80px; margin-left: 75px; margin-top: 40px;&#125; 使用内部变量 12345#logo width: w = 150px height: h = 80px margin-left: (@width / 2) margin-top: (@height / 2) /*注意括号一定要加上*/ 转化：123456#logo &#123; width: 150px; height: 80px; margin-left: 75px; margin-top: 40px;&#125; 变量的深入用法：写在mixins里，与分支结构配合定义初始属性值等。 12345678910position() position: arguments z-index: 1 unless @z-index /*这里是mixins，如果不懂可以先忽略。*/#logo z-index: 20 position: absolute#logo2 position: absolute 转化：12345678#logo &#123; z-index: 20; position: absolute;&#125;#logo2 &#123; position: absolute; z-index: 1;&#125; 变量冒泡查询 先看一个栗子：123456789body color: red ul li color: blue p color:black a background-color: @color 转化：123456789101112body &#123; color: #f00;&#125;body ul li &#123; color: #00f;&#125;body ul li p &#123; color: #000;&#125;body ul li p a &#123; background-color: #000;&#125; 注：从当前层开始，一直往上层查询，直到找到为止，找不到则返回null。上面例子中选择器”body ul li p”就定义了color属性了，而且选择器a被”body ul li p”嵌套的。所以查询到了上层的color属性，停止查询。 QUOTE: If you are not moving ahead , you are falling behind.","categories":[{"name":"css","slug":"css","permalink":"https://chanran.github.io/categories/css/"}],"tags":[{"name":"css","slug":"css","permalink":"https://chanran.github.io/tags/css/"},{"name":"stylus","slug":"stylus","permalink":"https://chanran.github.io/tags/stylus/"},{"name":"预处理器","slug":"预处理器","permalink":"https://chanran.github.io/tags/预处理器/"},{"name":"前端","slug":"前端","permalink":"https://chanran.github.io/tags/前端/"}],"keywords":[{"name":"css","slug":"css","permalink":"https://chanran.github.io/categories/css/"}]},{"title":"stylus预处理入门(一)--选择器","slug":"stylus预处理入门一选择器","date":"2016-11-01T05:50:46.000Z","updated":"2016-11-01T06:27:42.522Z","comments":true,"path":"2016/11/01/stylus预处理入门一选择器/","link":"","permalink":"https://chanran.github.io/2016/11/01/stylus预处理入门一选择器/","excerpt":"","text":"相关网站 官网：stylus 中文文档：stylus中文版参考文档 by 张鑫旭 理解css预处理器：css预处理器初识 by 栓萝卜的棍子 三种css预处理器语言详解：less|sass|stylus by 开源中国 CSS预处理器语言的个人理解 用另外一种可读性高、语法性强的语言来写CSS。stylus可以使用循环、分支、定义变量和函数结构来写css，这样写起来既方便又快捷。 通过一种转换机制将这种语法转化为原生css。每种语言的转化机制也有很多种，可以使用各种语言官网的方法转化，例如less。也可以使用构建工具webpack的stylus-loader来将stylus语言转化为原生css。 stylus的特点 官网可以直接将stylus代码放在官网这一页测试生成原生css（本人硬加上去的特点） 通过缩进来解释语言（喜欢python的geek应该会比较喜欢）。 待补充.. 123body div color white 转化：123body div &#123; color:#fff;&#125; stylus的优点 类python语法（官网称stylus为pythonic）。 语法灵活（可选的括号，冒号，分号等）。 stylus的缺点 由于其语法灵活的问题，如果没有团队规范，那么就会带来团队开发混乱，维护起来比较麻烦，各种语法混杂。 stylus语法介绍选择器(selectors)缩进(换行缩进表示语句前进)12body color:white; 转化：123body&#123; color:white;&#125; 同级选择器 element,element 123divp color:white; 转化：123div,p&#123; color:white;&#125; element element 123div p color:white; 转化：123div p&#123; color:white;&#125; element &gt;element 123div &gt;p color:white; 转化：123div &gt;p&#123; color:white;&#125; element +element 123div +p color:white; 转化：123div +p&#123; color:white;&#125; 例外：123foo bar baz&gt;span color:white; 注：上面代码的foo bar baz编译器解析有可能是”标签 属性 属性”，有可能是”标签 标签 标签”（有可能是自定义的标签）（编译器只会识别文档结构而不是标签或者属性） 建议写成下面这样（在最后的选择器后面加一个逗号[comma]）：12foo bar baz,&gt;span 注：上面的同级选择器是这里的优化，没有提到的其他选择器大多数保留原来的语法，或者与上面的语法类似，当然上面提到的选择器也可以使用原来的语法 引用父级选择器 使用&amp;指向父级选择器，有可能是选择器数组，也有可能是单独的一个选择器。 12345divp color:#FFF; &amp;:hover color:#000; 转化：12345678div,p &#123; color: #fff;&#125;div:hover,p:hover &#123; color: #000;&#125; 解释：其实”&amp;”可以理解为代替了上一层的选择器，比如上面例子，”&amp;”的上一层是”div,p”，这样说比较好理解。 下面是引用父级选择器的另一个例子 123456789101112box-shadow() -webkit-box-shadow arguments -moz-box-shadow arguments box-shadow arguments html.ie8 &amp;, html.ie7 &amp;, html.ie6 &amp; border 2px solid arguments[length(arguments) - 1]body #login box-shadow 1px 1px 3px #eee 转化：12345678910body #login &#123; -webkit-box-shadow: 1px 1px 3px #eee; -moz-box-shadow: 1px 1px 3px #eee; box-shadow: 1px 1px 3px #eee;&#125;html.ie8 body #login,html.ie7 body #login,html.ie6 body #login &#123; border: 2px solid #eee;&#125; 注：如果想在代码里使用”&amp;”符号而不是stylus的”&amp;”，可以在&amp;字符前加一个反斜杠并加上引号，如下： 1.foo[title*=&apos;\\&amp;&apos;] /*.foo[title*=&apos;&amp;&apos;]*/ 部分引用父级选择器之单层选择器 使用^ [N] 引用第N层父级选择器。如果N是正数，这里的第N层指的是最上层上层选择器到第N层选择器，如果N是负数，这里的第N层指的是最上层选择器到倒数第|N|层选择器。 有&amp;的情况： 123456.foo &amp;__bar width: 10px ^[0]:hover &amp; width: 20px 转化：123456.foo__bar &#123; width: 10px;&#125;.foo:hover .foo__bar &#123; width: 20px;&#125; 没有&amp;的情况： 123456.foo .bar width: 10px ^[0]:hover &amp; width: 20px 转化：123456.foo .bar &#123; width: 10px;&#125;.foo:hover .foo .bar &#123; width: 20px;&#125; N为0或者正数则从最上层开始到最下层，N为负数则从最下层开始到最上层。其实第N层的选择器是包含了上一层的选择器的，例如下面的例子，第一层选择器是foo,第二层就是foo bar,第三层是foo bar baz，如此类推（官网说的是嵌套）。 1234567.foo bar baz width: 10px ^[-1]:hover &amp; width: 20px 转化：123456.foo bar baz &#123; width: 10px;&#125;.foo bar:hover .foo bar baz &#123; width: 20px;&#125; 注：如果写在mixins里的话，推荐将N写成负数。因为你并不知道你在调用哪一层（ 有可能还有隐藏的上层选择器） 部分引用父级选择器之范围选择器 ^ [N..M] 引用第N层选择器到第M层选择器组成的选择器。注：这里有些跟引用单层选择器有点不同，这里的第几层是不包括上层选择器的，具体来看例子感受一下。 1234567.foo bar baz test width: 10px ^[-1]:hover ^[-2..-1] width: 20px 转化：123456.foo bar baz test &#123; width: 10px;&#125;.foo bar baz:hover baz test &#123; width: 20px;&#125; 其他部分引用父级选择器 最上层父级选择器(~/)，相当于^ [0] 1234.block &amp;__element ~/:hover &amp; color: red 转化：123.block:hover .block__element &#123; color: #f00;&#125; 相对父级选择器(../) 1234567.foo bar baz test width: 10px ../:hover ^[-1..-2] width: 20px 转化：123456.foo .bar .baz .test &#123; width: 10px;&#125;.foo .bar .baz:hover .baz .test &#123; width: 20px;&#125; 脱离嵌套的选择器(/) 1234567divp span color #A7A7A7 &amp;:hover, /.is-hovered color #000 转化：123456789div span,p span &#123; color: #a7a7a7;&#125;div span:hover,p span:hover,.is-hovered &#123; color: #000;&#125; 上面的例子里，转化后的代码.is-hovered已经脱离了嵌套结构了，已经不在任何选择器嵌套里。 选择器的值 selector()获取当前嵌套层的值，selectors()获取从最上层到当前层每一层的选择器的list 123456.foo &amp;:hover class selector() color black span color white 转化：1234567.foo:hover &#123; class: &apos;.foo:hover&apos;; /*这个是selector()的值*/ color: #000;&#125;.foo:hover span &#123; color: #fff;&#125; 123456.a .b &amp;__c content: selectors() span color white 转化：123456.a .b__c &#123; content: &apos;.a&apos;, &apos;&amp; .b&apos;, &apos;&amp;__c&apos;;&#125;.a .b__c span &#123; color: #fff;&#125; QUOTE: If you are not moving ahead , you are falling behind.","categories":[{"name":"css","slug":"css","permalink":"https://chanran.github.io/categories/css/"}],"tags":[{"name":"css","slug":"css","permalink":"https://chanran.github.io/tags/css/"},{"name":"stylus","slug":"stylus","permalink":"https://chanran.github.io/tags/stylus/"},{"name":"预处理器","slug":"预处理器","permalink":"https://chanran.github.io/tags/预处理器/"},{"name":"前端","slug":"前端","permalink":"https://chanran.github.io/tags/前端/"}],"keywords":[{"name":"css","slug":"css","permalink":"https://chanran.github.io/categories/css/"}]},{"title":"css3动画笔记","slug":"css3动画笔记","date":"2016-11-01T05:34:41.000Z","updated":"2016-11-01T06:27:57.470Z","comments":true,"path":"2016/11/01/css3动画笔记/","link":"","permalink":"https://chanran.github.io/2016/11/01/css3动画笔记/","excerpt":"","text":"some sites css3动画文档 by W3CSchool css3动画简介 by阮一峰 css3动画手册 by 腾讯 isux css3动画之硬件加速 by w3cplus 调试css3 动画 keyframe by w3ctech css动画的性能优化 by zencode.in 浏览器是如何渲染页面的 by code.leozhang2018.me (读完了之后会更加懂得如何提升css动画性能) 前端开发体系建设日记 by 张云龙 （这个链接是作为拓展的） transition grammar: tansition: property duration timing-function delay; detail transition-property：要过渡的css属性 transition-duration：要过渡持续多少秒或者毫秒 transition-timing-function：速度效果的速度曲线 transition-delay：延迟多少秒执行过渡 notice 默认值：transition:all 0 ease 0 如果transition-duration属性没有被设置，则默认为0，即不会产生过渡效果 tanstion-timing-function: linear/匀速/ | ease-in /加速/ | ease-out /减速/ | ease /逐渐放慢/ | cubic-bezier /函数，自定义速度模式，可以使用 工具网站 这个网站制作/ compatibility 目前，各大浏览器（包括IE 10）都已经支持无前缀的transition，所以transition已经可以很安全地不加浏览器前缀。 不是所有的CSS属性都支持transition，完整的列表查看这里，以及具体的效果。 transition需要明确知道，开始状态和结束状态的具体数值，才能计算出中间状态。比如，height从0px变化到100px，transition可以算出中间状态。但是，transition没法算出0px到auto的中间状态，也就是说，如果开始或结束的设置是height: auto，那么就不会产生动画效果。类似的情况还有，display: none到block，background: url(foo.jpg)到url(bar.jpg)等等。 advantage : 简单易用 disavantage transition需要事件触发，所以没法在网页加载时自动发生。 transition是一次性的，不能重复发生，除非一再触发。 transition只能定义开始状态和结束状态，不能定义中间状态，也就是说只有两个状态。 一条transition规则，只能定义一个属性的变化，不能涉及多个属性。 animation grammar: name duration timing-function delay iteration-count direction detail @keyframes：规定动画 animation-name：绑定选择器的keyframe名称 animation-duration：动画的持续时间，以秒或者毫秒计 animation-timing-function：动画的速度曲线 animation-delay：延迟多少秒执行动画 animation-iteration-count：动画播放次数 animation-diretion：是否应该轮流反向播放动画 animation-play-state(通常用在js控制是否播放,object.style.animationPlayState)：（paused[停止] | running[播放]）规定动画正在播放还是暂停 animation-fill-mode(通常用在js控制动画效果是否可见,object.style.animationFillMode)：（none[不改变默认行为] | forwards[当动画完成后，保持最后一个属性值] | backwards[在animation-delay 所制定的一段时间内，在动画显示之前，应该开始属性值] | both[向前和向后填充模式都被应用]）规定动画在播放之前或之后，其动画效果是否可见。 compatibility Internet Explorer 10、Firefox 以及 Opera 支持 @keyframes 规则和 animation 属性。Chrome 和 Safari 需要前缀 -webkit- Internet Explorer 9，以及更早的版本，不支持 @keyframe 规则或 animation 属性 notice 默认值：animation:none 0 ease 0 1 normal 尽量少在@keyframe里使用除了transform,opacity,filter以外的元素，因为会触发浏览器的重绘(repaint)详情 @keyframe 定义：以百分比来规定改变发生的时间，或者通过关键词”from” 和 “to”，等价于0%和100%，0%是动画的开始时间，100%是结束时间 grammar:@keyframes animationname{ keyframes-selector { css-styles;} } detail animationname：（必需）定义动画名称 keyframes-selector：（必需）动画时长的百分比，合法的值：0%-100%（可以使用 from[0%] 和 to[100%]） css-styles：（必需）一个或多个合法的css样式属性 example @keyframes mymove { 0% {top:0px;} 25% {top:200px;} 50% {top:100px;} 75% {top:200px;} 100% {top:0px;} } @-moz-keyframes mymove /* Firefox */ { 0% {top:0px;} 25% {top:200px;} 50% {top:100px;} 75% {top:200px;} 100% {top:0px;} } @-webkit-keyframes mymove /* Safari 和 Chrome */ { 0% {top:0px;} 25% {top:200px;} 50% {top:100px;} 75% {top:200px;} 100% {top:0px;} } @-o-keyframes mymove /* Opera */ { 0% {top:0px;} 25% {top:200px;} 50% {top:100px;} 75% {top:200px;} 100% {top:0px;} } 如果animation-duration属性没有设置，则时长为0，即动画不会被播放 animation-iteration-count默认值为1，可设置为infinite（无限次播放） animation-direction:normal /正常播放/ | alternate /轮流反向播放/ advantage ：解决了transition过渡效果不能循环播放的弊端 disvantage：目前，IE 10和Firefox（&gt;= 16）支持没有前缀的animation，而chrome不支持，所以必须使用webkit前缀。代码必须写成下面这样。 div:hover { -webkit-animation: 1s rainbow; animation: 1s rainbow; } @-webkit-keyframes rainbow { 0% { background: #c00; } 50% { background: orange; } 100% { background: yellowgreen; } } @keyframes rainbow { 0% { background: #c00; } 50% { background: orange; } 100% { background: yellowgreen; } } transform grammar:transform:none | transform-functions detail:none and transform-functions none：不定义转换 matrix(n,n,n,n,n,n)：定义2D转换，使用六个值的矩阵 matrix3d(n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n)：定义3D转换，使用16个值的4X4矩阵 translate(x,y)：定义2D转换（参数：x轴移动量，y轴移动量。+即向右移动，-即向左移动。单独一个量时表示x轴移动量与y轴移动量相等） translate3d(x,y,z)：定义3D转换（参数基于translate(x,y)扩展） translateX(x)：定义转换，只用于X轴的值 translateY(y)：定义转换，只用于Y轴的值 translateZ(z)：定义转换，只用于Z轴的值 scale(x,y)：定义2D缩放转换（参数x,y是倍数） scale(x,y,z)：定义3D缩放转换（参数基于scale(x,y)扩展） scaleX(x)：设置X轴的值来定义缩放转换 scaleY(y)：设置Y轴的值来定义缩放转换 scaleZ(z)：设置Z轴的值来定义缩放转换 rotate(angle)：定义2D旋转。在参数中规定角度（正是顺时针，负是逆时针） rotate3d(x,y,z,angle)：定义3D旋转 rotateX(angle)：定义沿着X轴的3D旋转 rotateY(angle)：定义沿着Y轴的3D旋转 rotateZ(angle)：定义沿着Z轴的3D旋转 skew(x-angle,y-angle)：定义沿着X和Y轴的2D倾斜转换 skew(angle)：定义沿着X轴的2D倾斜转换 skew(angle)：定义沿着Y轴的2D倾斜转换 perspective(n)：为3D转换元素定义透视视图 compatibility Internet Explorer 10、Firefox、Opera 支持 transform 属性 Internet Explorer 9 支持替代的 -ms-transform 属性（仅适用于 2D 转换） Safari 和 Chrome 支持替代的 -webkit-transform 属性（3D 和 2D 转换） Opera 只支持 2D 转换 Internet Explorer 10 和 Firefox 支持 3D 转换 Chrome 和 Safari 需要前缀 -webkit- Opera 仍然不支持 3D 转换（它只支持 2D 转换） notice transform-origin可以定义改变被转换元素的位置 grammar：transform-origin:x-axis,y-axis,z-zxis 默认值：transform-origin:50% 50% 0 detail x-axis | y-axis：定义视图被置于X轴的何处。可能的值：left | center | right | length | % z-axis：定义视图被置于Z轴的何处。可能的值：length compatibility Internet Explorer 10、Firefox、Opera 支持 transform-origin 属性 Internet Explorer 9 支持替代的 -ms-transform-origin 属性（仅适用于 2D 转换） Safari 和 Chrome 支持替代的 -webkit-transform-origin 属性（3D 和 2D 转换） Opera 只支持 2D 转换 transform-style规定如何在3D空间中呈现被嵌套的元素 grammar:transform-style:flat | preserve-3d tranform-style默认值：transform-style:flat compatibility Firefox 支持 transform-style 属性 Chrome、Safari 和 Opera 支持替代的 -webkit-transform-style 属性 perspective定义3D元素距视图的距离，以像素计。 grammar:perspective number | none perspective默认值：perspective:none detail 当为元素定义 perspective 属性时，其子元素会获得透视效果，而不是元素本身 perspective 属性只影响 3D 转换元素 通常和perspective-origin属性配合改变3D元素的底部位置 compatibility 目前浏览器都不支持 perspective 属性 Chrome 和 Safari 支持替代的 -webkit-perspective 属性 perspective-origin定义 3D 元素所基于的 X 轴和 Y 轴。该属性允许您改变 3D 元素的底部位置 grammar:perspective-origin:x-axis,y-axis perspective-origin默认值：perspective-origin:50% 50% detail 当为元素定义 perspective-origin 属性时，其子元素会获得透视效果，而不是元素本身 该属性必须与 perspective 属性一同使用，而且只影响 3D 转换元素 compatibility 目前浏览器都不支持 perspective-origin 属性 Chrome 和 Safari 支持替代的 -webkit-perspecitve-origin 属性 backface-visibility定义当元素不面向屏幕时是否可见 grammar:backface-visibility: visible | hidden backface-visibility默认值：backface-visibility:visible detail 如果在旋转元素不希望看到其背面时，该属性很有用 compatility 只有 Internet Explorer 10+ 和 Firefox 支持 backface-visibility 属性 Opera 15+、Safari 和 Chrome 支持替代的 -webkit-backface-visibility 属性 QUOTE: If you are not moving ahead , you are falling behind.","categories":[{"name":"css","slug":"css","permalink":"https://chanran.github.io/categories/css/"}],"tags":[{"name":"css3","slug":"css3","permalink":"https://chanran.github.io/tags/css3/"},{"name":"动画","slug":"动画","permalink":"https://chanran.github.io/tags/动画/"},{"name":"animation","slug":"animation","permalink":"https://chanran.github.io/tags/animation/"}],"keywords":[{"name":"css","slug":"css","permalink":"https://chanran.github.io/categories/css/"}]}]}