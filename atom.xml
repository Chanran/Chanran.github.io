<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>blue&#39;s blog</title>
  <subtitle>coding is funny.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chanran.github.io/"/>
  <updated>2016-11-01T06:09:11.121Z</updated>
  <id>https://chanran.github.io/</id>
  
  <author>
    <name>blue</name>
    <email>rong650751@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>stylus预处理入门(三)--插值</title>
    <link href="https://chanran.github.io/2016/11/01/stylus%E9%A2%84%E5%A4%84%E7%90%86%E5%85%A5%E9%97%A8%E4%B8%89%E6%8F%92%E5%80%BC/"/>
    <id>https://chanran.github.io/2016/11/01/stylus预处理入门三插值/</id>
    <published>2016-11-01T05:56:17.000Z</published>
    <updated>2016-11-01T06:09:11.121Z</updated>
    
    <content type="html"><![CDATA[<h1 id="插值-interporation"><a href="#插值-interporation" class="headerlink" title="插值(interporation)"></a>插值(interporation)</h1><blockquote>
<p>插值相当于解析表达式或者变量，让它们的值替换插值的位置。<br><strong>注：</strong> 不能用于属性值的插值（但属性值可以使用变量替换）。</p>
</blockquote>
<ul>
<li>在css属性名中使用插值</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">partOfProp = radius</div><div class="line">value = 10px</div><div class="line">div</div><div class="line">    border-&#123;partOfProp&#125; value  /*切记属性值这里不可以使用插值*/</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div &#123;</div><div class="line">  border-radius: 10px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<ul>
<li>在选择器中使用插值</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">selector = div</div><div class="line">partOfProp = radius</div><div class="line">value = 10px</div><div class="line">&#123;selector&#125;</div><div class="line">    border-&#123;partOfProp&#125; value</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div &#123;</div><div class="line">  border-radius: 10px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">selectors = &apos;#foo,#bar,.baz&apos;</div><div class="line"></div><div class="line">&#123;selectors&#125;</div><div class="line">  background: #000</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#foo,</div><div class="line">#bar,</div><div class="line">.baz &#123;</div><div class="line">  background: #000;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<blockquote>
<p>高级使用：与mixins配合使用</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">vendor(prop, args)</div><div class="line">  -webkit-&#123;prop&#125; args</div><div class="line">  -moz-&#123;prop&#125; args</div><div class="line">  &#123;prop&#125; args</div><div class="line"></div><div class="line">border-radius()</div><div class="line">  vendor(&apos;border-radius&apos;, arguments)</div><div class="line"></div><div class="line">box-shadow()</div><div class="line">  vendor(&apos;box-shadow&apos;, arguments)</div><div class="line"></div><div class="line">button</div><div class="line">  border-radius 1px 2px / 3px 4px</div></pre></td></tr></table></figure>
<p>转化<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">button &#123;</div><div class="line">  -webkit-border-radius: 1px 2px / 3px 4px;</div><div class="line">  -moz-border-radius: 1px 2px / 3px 4px;</div><div class="line">  border-radius: 1px 2px / 3px 4px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<blockquote>
<p>高级使用：与循环迭代(iteration)配合使用</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">table</div><div class="line">  for row in 1 2 3 4 5</div><div class="line">    tr:nth-child(&#123;row&#125;)</div><div class="line">      height: 10px * row</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">table tr:nth-child(1) &#123;</div><div class="line">  height: 10px;</div><div class="line">&#125;</div><div class="line">table tr:nth-child(2) &#123;</div><div class="line">  height: 20px;</div><div class="line">&#125;</div><div class="line">table tr:nth-child(3) &#123;</div><div class="line">  height: 30px;</div><div class="line">&#125;</div><div class="line">table tr:nth-child(4) &#123;</div><div class="line">  height: 40px;</div><div class="line">&#125;</div><div class="line">table tr:nth-child(5) &#123;</div><div class="line">  height: 50px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<blockquote>
<p>QUOTE: If you are not moving ahead , you are falling behind.</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;插值-interporation&quot;&gt;&lt;a href=&quot;#插值-interporation&quot; class=&quot;headerlink&quot; title=&quot;插值(interporation)&quot;&gt;&lt;/a&gt;插值(interporation)&lt;/h1&gt;&lt;blockquote&gt;
&lt;p
    
    </summary>
    
    
      <category term="stylus" scheme="https://chanran.github.io/tags/stylus/"/>
    
      <category term="预处理器" scheme="https://chanran.github.io/tags/%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8/"/>
    
      <category term="css" scheme="https://chanran.github.io/tags/css/"/>
    
      <category term="前端" scheme="https://chanran.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>stylus预处理入门(二)--变量</title>
    <link href="https://chanran.github.io/2016/11/01/stylus%E9%A2%84%E5%A4%84%E7%90%86%E5%85%A5%E9%97%A8%E4%BA%8C%E5%8F%98%E9%87%8F/"/>
    <id>https://chanran.github.io/2016/11/01/stylus预处理入门二变量/</id>
    <published>2016-11-01T05:54:34.000Z</published>
    <updated>2016-11-01T06:14:50.576Z</updated>
    
    <content type="html"><![CDATA[<h1 id="变量-variables"><a href="#变量-variables" class="headerlink" title="变量(variables)"></a>变量(variables)</h1><blockquote>
<p><strong>变量的标识符可以由$、下划线、字母、数字组成，其中数字不能作为变量的开头。其实这里的变量只是理解为单纯的字符替换</strong></p>
</blockquote>
<p><strong>外部定义变量：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">_font-size = 14px</div><div class="line">font = _font-size &quot;Lucida Grande&quot;, Arial</div><div class="line"></div><div class="line">body</div><div class="line">  font font, sans-serif</div></pre></td></tr></table></figure></p>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">body &#123;</div><div class="line">  font: 14px &quot;Lucida Grande&quot;, Arial, sans-serif;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<p> <strong>下面是变量的另外一种用法，不在外部定义变量:</strong></p>
<ul>
<li>内部重新定义当前变量</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#logo</div><div class="line">  width: w = 150px</div><div class="line">  height: h = 80px</div><div class="line">  margin-left: (w / 2)</div><div class="line">  margin-top: (h / 2) /*注意括号一定要加上*/</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#logo &#123;</div><div class="line">  width: 150px;</div><div class="line">  height: 80px;</div><div class="line">  margin-left: 75px;</div><div class="line">  margin-top: 40px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<ul>
<li>使用内部变量</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#logo</div><div class="line">  width: w = 150px</div><div class="line">  height: h = 80px</div><div class="line">  margin-left: (@width / 2)</div><div class="line">  margin-top: (@height / 2) /*注意括号一定要加上*/</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#logo &#123;</div><div class="line">  width: 150px;</div><div class="line">  height: 80px;</div><div class="line">  margin-left: 75px;</div><div class="line">  margin-top: 40px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<blockquote>
<p><strong>变量的深入用法：写在mixins里，与分支结构配合定义初始属性值等。</strong></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">position()</div><div class="line">  position: arguments</div><div class="line">  z-index: 1 unless @z-index /*这里是mixins，如果不懂可以先忽略。*/</div><div class="line"></div><div class="line">#logo</div><div class="line">  z-index: 20</div><div class="line">  position: absolute</div><div class="line"></div><div class="line">#logo2</div><div class="line">  position: absolute</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#logo &#123;</div><div class="line">  z-index: 20;</div><div class="line">  position: absolute;</div><div class="line">&#125;</div><div class="line">#logo2 &#123;</div><div class="line">  position: absolute;</div><div class="line">  z-index: 1;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<blockquote>
<p><strong>变量冒泡查询</strong></p>
</blockquote>
<p>先看一个栗子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">body</div><div class="line"> color: red</div><div class="line"> ul</div><div class="line">   li</div><div class="line">     color: blue</div><div class="line">     p</div><div class="line">         color:black</div><div class="line">         a</div><div class="line">             background-color: @color</div></pre></td></tr></table></figure></p>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">body &#123;</div><div class="line">  color: #f00;</div><div class="line">&#125;</div><div class="line">body ul li &#123;</div><div class="line">  color: #00f;</div><div class="line">&#125;</div><div class="line">body ul li p &#123;</div><div class="line">  color: #000;</div><div class="line">&#125;</div><div class="line">body ul li p a &#123;</div><div class="line">  background-color: #000;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>注：从当前层开始，一直往上层查询，直到找到为止，找不到则返回null。上面例子中选择器”body ul li p”就定义了color属性了，而且选择器a被”body ul li p”嵌套的。所以查询到了上层的color属性，停止查询。</p>
</blockquote>
<hr>
<blockquote>
<p>QUOTE: If you are not moving ahead , you are falling behind.</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;变量-variables&quot;&gt;&lt;a href=&quot;#变量-variables&quot; class=&quot;headerlink&quot; title=&quot;变量(variables)&quot;&gt;&lt;/a&gt;变量(variables)&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;变量的标识符可
    
    </summary>
    
    
      <category term="stylus" scheme="https://chanran.github.io/tags/stylus/"/>
    
      <category term="预处理器" scheme="https://chanran.github.io/tags/%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8/"/>
    
      <category term="css" scheme="https://chanran.github.io/tags/css/"/>
    
      <category term="前端" scheme="https://chanran.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>stylus预处理入门(一)——选择器</title>
    <link href="https://chanran.github.io/2016/11/01/stylus%E9%A2%84%E5%A4%84%E7%90%86%E5%85%A5%E9%97%A8%E4%B8%80%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>https://chanran.github.io/2016/11/01/stylus预处理入门一选择器/</id>
    <published>2016-11-01T05:50:46.000Z</published>
    <updated>2016-11-01T05:58:10.455Z</updated>
    
    <content type="html"><![CDATA[<hr>
<h1 id="相关网站"><a href="#相关网站" class="headerlink" title="相关网站"></a>相关网站</h1><ul>
<li>官网：<a href="http://stylus-lang.com/" target="_blank" rel="external">stylus</a></li>
<li>中文文档：<a href="http://www.zhangxinxu.com/jq/stylus/" target="_blank" rel="external">stylus中文版参考文档</a> by 张鑫旭</li>
<li>理解css预处理器：<a href="http://leeluolee.github.io/2013/08/01/mcss-start/" target="_blank" rel="external">css预处理器初识</a> by 栓萝卜的棍子</li>
<li>三种css预处理器语言详解：<a href="http://www.oschina.net/question/12_44255" target="_blank" rel="external">less|sass|stylus</a> by 开源中国</li>
</ul>
<hr>
<h1 id="CSS预处理器语言的个人理解"><a href="#CSS预处理器语言的个人理解" class="headerlink" title="CSS预处理器语言的个人理解"></a>CSS预处理器语言的个人理解</h1><ul>
<li>用另外一种可读性高、语法性强的语言来写CSS。stylus可以使用循环、分支、定义变量和函数结构来写css，这样写起来既方便又快捷。</li>
<li>通过一种转换机制将这种语法转化为原生css。每种语言的转化机制也有很多种，可以使用各种语言官网的方法转化，例如<a href="http://lesscss.org/#using-less" target="_blank" rel="external">less</a>。也可以使用构建工具webpack的<a href="https://github.com/shama/stylus-loader" target="_blank" rel="external">stylus-loader</a>来将stylus语言转化为原生css。</li>
</ul>
<hr>
<h1 id="stylus的特点"><a href="#stylus的特点" class="headerlink" title="stylus的特点"></a>stylus的特点</h1><ul>
<li>官网可以直接将stylus代码放在官网<a href="http://stylus-lang.com/try.html#?code=body%20%7B%0A%20%20font%3A%2014px%2F1.5%20Helvetica%2C%20arial%2C%20sans-serif%3B%0A%20%20%23logo%20%7B%0A%20%20%20%20border-radius%3A%205px%3B%0A%20%20%7D%0A%7D" target="_blank" rel="external">这一页</a>测试生成原生css（本人硬加上去的特点）</li>
<li>通过缩进来解释语言（喜欢python的geek应该会比较喜欢）。</li>
<li>待补充..</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">body</div><div class="line">  div</div><div class="line">  	color white</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">body div &#123;</div><div class="line">	color:#fff;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<h1 id="stylus的优点"><a href="#stylus的优点" class="headerlink" title="stylus的优点"></a>stylus的优点</h1><ul>
<li>类python语法（官网称stylus为pythonic）。</li>
<li>语法灵活（可选的括号，冒号，分号等）。</li>
</ul>
<hr>
<h1 id="stylus的缺点"><a href="#stylus的缺点" class="headerlink" title="stylus的缺点"></a>stylus的缺点</h1><ul>
<li>由于其语法灵活的问题，如果没有团队规范，那么就会带来团队开发混乱，维护起来比较麻烦，各种语法混杂。</li>
</ul>
<hr>
<h1 id="stylus语法介绍"><a href="#stylus语法介绍" class="headerlink" title="stylus语法介绍"></a>stylus语法介绍</h1><h2 id="选择器-selectors"><a href="#选择器-selectors" class="headerlink" title="选择器(selectors)"></a>选择器(selectors)</h2><h3 id="缩进-换行缩进表示语句前进"><a href="#缩进-换行缩进表示语句前进" class="headerlink" title="缩进(换行缩进表示语句前进)"></a><strong>缩进(换行缩进表示语句前进)</strong></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">body</div><div class="line">  color:white;</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">body&#123;</div><div class="line">	color:white;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<h3 id="同级选择器"><a href="#同级选择器" class="headerlink" title="同级选择器"></a><strong>同级选择器</strong></h3><ul>
<li>element,element</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div</div><div class="line">p</div><div class="line">	color:white;</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div,p&#123;</div><div class="line">	color:white;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<ul>
<li>element element</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div</div><div class="line">	p</div><div class="line">    	color:white;</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div p&#123;</div><div class="line">	color:white;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<ul>
<li>element &gt;element</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div</div><div class="line">	&gt;p</div><div class="line">      color:white;</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div &gt;p&#123;</div><div class="line">	color:white;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>element +element</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div</div><div class="line">	+p</div><div class="line">    	color:white;</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div +p&#123;</div><div class="line">	color:white;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<p><strong>例外：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">foo bar baz</div><div class="line">&gt;span</div><div class="line">	color:white;</div></pre></td></tr></table></figure></p>
<blockquote>
<p><strong>注：上面代码的foo bar baz编译器解析有可能是”标签 属性 属性”，有可能是”标签 标签 标签”（有可能是自定义的标签）</strong>（编译器只会识别文档结构而不是标签或者属性）</p>
</blockquote>
<hr>
<p>建议写成下面这样（在最后的选择器后面加一个逗号[comma]）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">foo bar baz,</div><div class="line">&gt;span</div></pre></td></tr></table></figure></p>
<blockquote>
<p><strong>注：上面的同级选择器是<a href="http://www.w3school.com.cn/cssref/css_selectors.ASP" target="_blank" rel="external">这里</a>的优化，没有提到的其他选择器大多数保留原来的语法，或者与上面的语法类似，当然上面提到的选择器也可以使用原来的语法</strong></p>
</blockquote>
<hr>
<h3 id="引用父级选择器"><a href="#引用父级选择器" class="headerlink" title="引用父级选择器"></a><strong>引用父级选择器</strong></h3><blockquote>
<p><strong>使用&amp;指向父级选择器，有可能是选择器数组，也有可能是单独的一个选择器。</strong></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">div</div><div class="line">p</div><div class="line">	color:#FFF;</div><div class="line">    &amp;:hover</div><div class="line">    	color:#000;</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">div,</div><div class="line">p &#123;</div><div class="line">  color: #fff;</div><div class="line">&#125;</div><div class="line">div:hover,</div><div class="line">p:hover &#123;</div><div class="line">  color: #000;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<blockquote>
<p><strong>解释：其实”&amp;”可以理解为代替了上一层的选择器，比如上面例子，”&amp;”的上一层是”div,p”，这样说比较好理解。</strong></p>
</blockquote>
<p>下面是引用父级选择器的另一个例子</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">box-shadow()</div><div class="line">  -webkit-box-shadow arguments</div><div class="line">  -moz-box-shadow arguments</div><div class="line">  box-shadow arguments</div><div class="line">  html.ie8 &amp;,</div><div class="line">  html.ie7 &amp;,</div><div class="line">  html.ie6 &amp;</div><div class="line">    border 2px solid arguments[length(arguments) - 1]</div><div class="line"></div><div class="line">body</div><div class="line">  #login</div><div class="line">    box-shadow 1px 1px 3px #eee</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">body #login &#123;</div><div class="line">  -webkit-box-shadow: 1px 1px 3px #eee;</div><div class="line">  -moz-box-shadow: 1px 1px 3px #eee;</div><div class="line">  box-shadow: 1px 1px 3px #eee;</div><div class="line">&#125;</div><div class="line">html.ie8 body #login,</div><div class="line">html.ie7 body #login,</div><div class="line">html.ie6 body #login &#123;</div><div class="line">  border: 2px solid #eee;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<blockquote>
<p><strong>注：如果想在代码里使用”&amp;”符号而不是stylus的”&amp;”，可以在&amp;字符前加一个反斜杠并加上引号，如下：</strong></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.foo[title*=&apos;\&amp;&apos;]  /*.foo[title*=&apos;&amp;&apos;]*/</div></pre></td></tr></table></figure>
<hr>
<h3 id="部分引用父级选择器之单层选择器"><a href="#部分引用父级选择器之单层选择器" class="headerlink" title="部分引用父级选择器之单层选择器"></a><strong>部分引用父级选择器之单层选择器</strong></h3><blockquote>
<p>使用^ [N] 引用第N层父级选择器。如果N是正数，这里的第N层指的是最上层上层选择器到第N层选择器，如果N是负数，这里的第N层指的是最上层选择器到倒数第|N|层选择器。</p>
</blockquote>
<ul>
<li>有&amp;的情况：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.foo</div><div class="line">  &amp;__bar</div><div class="line">    width: 10px</div><div class="line"></div><div class="line">    ^[0]:hover &amp;</div><div class="line">      width: 20px</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.foo__bar &#123;</div><div class="line">  width: 10px;</div><div class="line">&#125;</div><div class="line">.foo:hover .foo__bar &#123;</div><div class="line">  width: 20px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<ul>
<li>没有&amp;的情况：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.foo</div><div class="line">  .bar</div><div class="line">    width: 10px</div><div class="line"></div><div class="line">    ^[0]:hover &amp;</div><div class="line">      width: 20px</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.foo .bar &#123;</div><div class="line">  width: 10px;</div><div class="line">&#125;</div><div class="line">.foo:hover .foo .bar &#123;</div><div class="line">  width: 20px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<ul>
<li>N为0或者正数则从最上层开始到最下层，N为负数则从最下层开始到最上层。其实第N层的选择器是包含了上一层的选择器的，例如下面的例子，第一层选择器是foo,第二层就是foo bar,第三层是foo bar baz，如此类推（官网说的是嵌套）。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">.foo</div><div class="line">  bar</div><div class="line">    baz</div><div class="line">      width: 10px</div><div class="line"></div><div class="line">      ^[-1]:hover &amp;</div><div class="line">        width: 20px</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.foo bar baz &#123;</div><div class="line">  width: 10px;</div><div class="line">&#125;</div><div class="line">.foo bar:hover .foo bar baz &#123;</div><div class="line">  width: 20px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<blockquote>
<p><strong>注：如果写在mixins里的话，推荐将N写成负数。因为你并不知道你在调用哪一层（ 有可能还有隐藏的上层选择器）</strong></p>
</blockquote>
<hr>
<h3 id="部分引用父级选择器之范围选择器"><a href="#部分引用父级选择器之范围选择器" class="headerlink" title="部分引用父级选择器之范围选择器"></a><strong>部分引用父级选择器之范围选择器</strong></h3><blockquote>
<p>^ [N..M] 引用第N层选择器到第M层选择器组成的选择器。<br>注：这里有些跟引用单层选择器有点不同，这里的第几层是不包括上层选择器的，具体来看例子感受一下。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">.foo</div><div class="line">  bar</div><div class="line">    baz</div><div class="line">      test</div><div class="line">         width: 10px</div><div class="line">         ^[-1]:hover ^[-2..-1]</div><div class="line">             width: 20px</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.foo bar baz test &#123;</div><div class="line">  width: 10px;</div><div class="line">&#125;</div><div class="line">.foo bar baz:hover baz test &#123;</div><div class="line">  width: 20px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<h3 id="其他部分引用父级选择器"><a href="#其他部分引用父级选择器" class="headerlink" title="其他部分引用父级选择器"></a>其他部分引用父级选择器</h3><ul>
<li>最上层父级选择器(~/)，相当于^ [0]</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.block</div><div class="line">  &amp;__element</div><div class="line">    ~/:hover &amp;</div><div class="line">      color: red</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.block:hover .block__element &#123;</div><div class="line">  color: #f00;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<ul>
<li>相对父级选择器(../)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">.foo</div><div class="line">  bar</div><div class="line">    baz</div><div class="line">      test</div><div class="line">         width: 10px</div><div class="line">         ../:hover ^[-1..-2]</div><div class="line">             width: 20px</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.foo .bar .baz .test &#123;</div><div class="line">  width: 10px;</div><div class="line">&#125;</div><div class="line">.foo .bar .baz:hover .baz .test &#123;</div><div class="line">  width: 20px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<ul>
<li>脱离嵌套的选择器(/)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">div</div><div class="line">p</div><div class="line">   span</div><div class="line">      color #A7A7A7</div><div class="line">      &amp;:hover,</div><div class="line">      /.is-hovered</div><div class="line">        color #000</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">div span,</div><div class="line">p span &#123;</div><div class="line">  color: #a7a7a7;</div><div class="line">&#125;</div><div class="line">div span:hover,</div><div class="line">p span:hover,</div><div class="line">.is-hovered &#123;</div><div class="line">  color: #000;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<blockquote>
<p><strong>上面的例子里，转化后的代码.is-hovered已经脱离了嵌套结构了，已经不在任何选择器嵌套里。</strong></p>
</blockquote>
<hr>
<h3 id="选择器的值"><a href="#选择器的值" class="headerlink" title="选择器的值"></a><strong>选择器的值</strong></h3><blockquote>
<p><strong>selector()获取当前嵌套层的值，selectors()获取从最上层到当前层每一层的选择器的list</strong></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.foo</div><div class="line">  &amp;:hover</div><div class="line">       class selector()</div><div class="line">       color black</div><div class="line">       span</div><div class="line">          color white</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">.foo:hover &#123;</div><div class="line">  class: &apos;.foo:hover&apos;; /*这个是selector()的值*/</div><div class="line">  color: #000;</div><div class="line">&#125;</div><div class="line">.foo:hover span &#123;</div><div class="line">  color: #fff;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.a</div><div class="line">  .b</div><div class="line">    &amp;__c</div><div class="line">      content: selectors()</div><div class="line">      span</div><div class="line">            color white</div></pre></td></tr></table></figure>
<p>转化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.a .b__c &#123;</div><div class="line">  content: &apos;.a&apos;, &apos;&amp; .b&apos;, &apos;&amp;__c&apos;;</div><div class="line">&#125;</div><div class="line">.a .b__c span &#123;</div><div class="line">  color: #fff;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<blockquote>
<p>QUOTE: If you are not moving ahead , you are falling behind.</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;相关网站&quot;&gt;&lt;a href=&quot;#相关网站&quot; class=&quot;headerlink&quot; title=&quot;相关网站&quot;&gt;&lt;/a&gt;相关网站&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;官网：&lt;a href=&quot;http://stylus-lang.com/&quot; target=&quot;_blank
    
    </summary>
    
    
      <category term="stylus" scheme="https://chanran.github.io/tags/stylus/"/>
    
      <category term="预处理器" scheme="https://chanran.github.io/tags/%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8/"/>
    
      <category term="css" scheme="https://chanran.github.io/tags/css/"/>
    
      <category term="前端" scheme="https://chanran.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>css3动画笔记</title>
    <link href="https://chanran.github.io/2016/11/01/css3%E5%8A%A8%E7%94%BB%E7%AC%94%E8%AE%B0/"/>
    <id>https://chanran.github.io/2016/11/01/css3动画笔记/</id>
    <published>2016-11-01T05:34:41.000Z</published>
    <updated>2016-11-01T05:49:36.447Z</updated>
    
    <content type="html"><![CDATA[<h1 id="some-sites"><a href="#some-sites" class="headerlink" title="some sites"></a>some sites</h1><ul>
<li><a href="http://www.w3school.com.cn/css3/css3_animation.asp" target="_blank" rel="external">css3动画文档</a> by W3CSchool</li>
<li><a href="http://www.ruanyifeng.com/blog/2014/02/css_transition_and_animation.html" target="_blank" rel="external">css3动画简介</a> by阮一峰</li>
<li><a href="http://isux.tencent.com/css3/" target="_blank" rel="external">css3动画手册</a> by 腾讯 isux</li>
<li><a href="http://www.w3cplus.com/css3/introduction-to-hardware-acceleration-css-animations.html" target="_blank" rel="external">css3动画之硬件加速</a> by w3cplus</li>
<li><a href="http://www.w3ctech.com/topic/1472" target="_blank" rel="external">调试css3 动画 keyframe</a> by w3ctech</li>
<li><a href="http://zencode.in/14.CSS%E5%8A%A8%E7%94%BB%E7%9A%84%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.html" target="_blank" rel="external">css动画的性能优化</a> by zencode.in</li>
<li><a href="http://code.leozhang2018.me/2016/03/07/%E9%9D%A2%E5%90%91%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E9%9B%86%E9%94%A6/" target="_blank" rel="external">浏览器是如何渲染页面的</a> by code.leozhang2018.me (读完了之后会更加懂得如何提升css动画性能)</li>
<li><a href="https://github.com/fouber/blog/issues/2" target="_blank" rel="external">前端开发体系建设日记</a> by 张云龙 （这个链接是作为拓展的）</li>
</ul>
<h1 id="transition"><a href="#transition" class="headerlink" title="transition"></a>transition</h1><ul>
<li>grammar: tansition: property duration timing-function delay;</li>
<li>detail<ul>
<li>transition-property：要过渡的css属性</li>
<li>transition-duration：要过渡持续多少秒或者毫秒</li>
<li>transition-timing-function：速度效果的速度曲线</li>
<li>transition-delay：延迟多少秒执行过渡</li>
</ul>
</li>
<li>notice<ul>
<li>默认值：transition:all 0 ease 0</li>
<li>如果transition-duration属性没有被设置，则默认为0，即不会产生过渡效果</li>
<li>tanstion-timing-function: linear/<em>匀速</em>/ | ease-in /<em>加速</em>/ | ease-out /<em>减速</em>/ | ease /<em>逐渐放慢</em>/ | cubic-bezier /<em>函数，自定义速度模式，可以使用 <a href="http://cubic-bezier.com/" target="_blank" rel="external">工具网站</a> 这个网站制作</em>/</li>
</ul>
</li>
<li>compatibility<ul>
<li>目前，各大浏览器（包括IE 10）都已经支持无前缀的transition，所以transition已经可以很安全地不加浏览器前缀。</li>
<li>不是所有的CSS属性都支持transition，完整的列表查看<a href="http://oli.jp/2010/css-animatable-properties/" target="_blank" rel="external">这里</a>，以及具体的<a href="http://leaverou.github.io/animatable/" target="_blank" rel="external">效果</a>。</li>
<li>transition需要明确知道，开始状态和结束状态的具体数值，才能计算出中间状态。比如，height从0px变化到100px，transition可以算出中间状态。但是，transition没法算出0px到auto的中间状态，也就是说，如果开始或结束的设置是height: auto，那么就不会产生动画效果。类似的情况还有，display: none到block，background: url(foo.jpg)到url(bar.jpg)等等。</li>
</ul>
</li>
<li>advantage : 简单易用</li>
<li>disavantage<ul>
<li>transition需要事件触发，所以没法在网页加载时自动发生。</li>
<li>transition是一次性的，不能重复发生，除非一再触发。</li>
<li>transition只能定义开始状态和结束状态，不能定义中间状态，也就是说只有两个状态。</li>
<li>一条transition规则，只能定义一个属性的变化，不能涉及多个属性。</li>
</ul>
</li>
</ul>
<h1 id="animation"><a href="#animation" class="headerlink" title="animation"></a>animation</h1><ul>
<li>grammar: name duration timing-function delay iteration-count direction</li>
<li>detail<ul>
<li>@keyframes：规定动画</li>
<li>animation-name：绑定选择器的keyframe名称</li>
<li>animation-duration：动画的持续时间，以秒或者毫秒计</li>
<li>animation-timing-function：动画的速度曲线</li>
<li>animation-delay：延迟多少秒执行动画</li>
<li>animation-iteration-count：动画播放次数</li>
<li>animation-diretion：是否应该轮流反向播放动画</li>
<li>animation-play-state(通常用在js控制是否播放,object.style.animationPlayState)：（paused[停止] | running[播放]）规定动画正在播放还是暂停</li>
<li>animation-fill-mode(通常用在js控制动画效果是否可见,object.style.animationFillMode)：（none[不改变默认行为] | forwards[当动画完成后，保持最后一个属性值] | backwards[在animation-delay 所制定的一段时间内，在动画显示之前，应该开始属性值] | both[向前和向后填充模式都被应用]）规定动画在播放之前或之后，其动画效果是否可见。</li>
</ul>
</li>
<li>compatibility<ul>
<li>Internet Explorer 10、Firefox 以及 Opera 支持 @keyframes 规则和 animation 属性。Chrome 和 Safari 需要前缀 -webkit-</li>
<li>Internet Explorer 9，以及更早的版本，不支持 @keyframe 规则或 animation 属性</li>
</ul>
</li>
<li>notice<ul>
<li>默认值：animation:none 0 ease 0 1 normal</li>
<li>尽量少在@keyframe里使用除了transform,opacity,filter以外的元素，因为会触发浏览器的重绘(repaint)<a href="http://www.w3cplus.com/css3/introduction-to-hardware-acceleration-css-animations.html" target="_blank" rel="external">详情</a></li>
<li>@keyframe<ul>
<li>定义：以百分比来规定改变发生的时间，或者通过关键词”from” 和 “to”，等价于0%和100%，0%是动画的开始时间，100%是结束时间</li>
<li>grammar:@keyframes animationname{ keyframes-selector { css-styles;} }</li>
<li>detail<ul>
<li>animationname：（必需）定义动画名称</li>
<li>keyframes-selector：（必需）动画时长的百分比，合法的值：0%-100%（可以使用 from[0%] 和 to[100%]）</li>
<li>css-styles：（必需）一个或多个合法的css样式属性</li>
</ul>
</li>
<li>example</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<pre><code>@keyframes mymove
{
  0%   {top:0px;}
  25%  {top:200px;}
  50%  {top:100px;}
  75%  {top:200px;}
  100% {top:0px;}
}
@-moz-keyframes mymove /* Firefox */
{
  0%   {top:0px;}
  25%  {top:200px;}
  50%  {top:100px;}
  75%  {top:200px;}
  100% {top:0px;}
}

@-webkit-keyframes mymove /* Safari 和 Chrome */
{
  0%   {top:0px;}
  25%  {top:200px;}
  50%  {top:100px;}
  75%  {top:200px;}
  100% {top:0px;}
}

@-o-keyframes mymove /* Opera */
{
  0%   {top:0px;}
  25%  {top:200px;}
  50%  {top:100px;}
  75%  {top:200px;}
  100% {top:0px;}
}
</code></pre><hr>
<ul>
<li>如果animation-duration属性没有设置，则时长为0，即动画不会被播放</li>
<li>animation-iteration-count默认值为1，可设置为infinite（无限次播放）</li>
<li>animation-direction:normal /<em>正常播放</em>/ | alternate /<em>轮流反向播放</em>/<ul>
<li>advantage ：解决了transition过渡效果不能循环播放的弊端</li>
<li>disvantage：目前，IE 10和Firefox（&gt;= 16）支持没有前缀的animation，而chrome不支持，所以必须使用webkit前缀。代码必须写成下面这样。</li>
</ul>
</li>
</ul>
<hr>
<pre><code>div:hover {
  -webkit-animation: 1s rainbow;
  animation: 1s rainbow;  
}

@-webkit-keyframes rainbow {
  0% { background: #c00; }
  50% { background: orange; }
  100% { background: yellowgreen; }
}

@keyframes rainbow {
  0% { background: #c00; }
  50% { background: orange; }
  100% { background: yellowgreen; }
}
</code></pre><hr>
<h1 id="transform"><a href="#transform" class="headerlink" title="transform"></a>transform</h1><ul>
<li>grammar:transform:none | transform-functions</li>
<li>detail:none and transform-functions<ul>
<li>none：不定义转换</li>
<li>matrix(n,n,n,n,n,n)：定义2D转换，使用六个值的矩阵</li>
<li>matrix3d(n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n)：定义3D转换，使用16个值的4X4矩阵</li>
<li>translate(x,y)：定义2D转换（参数：x轴移动量，y轴移动量。+即向右移动，-即向左移动。单独一个量时表示x轴移动量与y轴移动量相等）</li>
<li>translate3d(x,y,z)：定义3D转换（参数基于translate(x,y)扩展）</li>
<li>translateX(x)：定义转换，只用于X轴的值</li>
<li>translateY(y)：定义转换，只用于Y轴的值</li>
<li>translateZ(z)：定义转换，只用于Z轴的值</li>
<li>scale(x,y)：定义2D缩放转换（参数x,y是倍数）</li>
<li>scale(x,y,z)：定义3D缩放转换（参数基于scale(x,y)扩展）</li>
<li>scaleX(x)：设置X轴的值来定义缩放转换</li>
<li>scaleY(y)：设置Y轴的值来定义缩放转换</li>
<li>scaleZ(z)：设置Z轴的值来定义缩放转换</li>
<li>rotate(angle)：定义2D旋转。在参数中规定角度（正是顺时针，负是逆时针）</li>
<li>rotate3d(x,y,z,angle)：定义3D旋转</li>
<li>rotateX(angle)：定义沿着X轴的3D旋转</li>
<li>rotateY(angle)：定义沿着Y轴的3D旋转</li>
<li>rotateZ(angle)：定义沿着Z轴的3D旋转</li>
<li>skew(x-angle,y-angle)：定义沿着X和Y轴的2D倾斜转换</li>
<li>skew(angle)：定义沿着X轴的2D倾斜转换</li>
<li>skew(angle)：定义沿着Y轴的2D倾斜转换</li>
<li>perspective(n)：为3D转换元素定义透视视图</li>
</ul>
</li>
<li>compatibility<ul>
<li>Internet Explorer 10、Firefox、Opera 支持 transform 属性</li>
<li>Internet Explorer 9 支持替代的 -ms-transform 属性（仅适用于 2D 转换）</li>
<li>Safari 和 Chrome 支持替代的 -webkit-transform 属性（3D 和 2D 转换）</li>
<li>Opera 只支持 2D 转换</li>
<li>Internet Explorer 10 和 Firefox 支持 3D 转换</li>
<li>Chrome 和 Safari 需要前缀 -webkit-</li>
<li>Opera 仍然不支持 3D 转换（它只支持 2D 转换）</li>
</ul>
</li>
<li>notice<ul>
<li>transform-origin可以定义改变被转换元素的位置<ul>
<li>grammar：transform-origin:x-axis,y-axis,z-zxis</li>
<li>默认值：transform-origin:50% 50% 0</li>
<li>detail<ul>
<li>x-axis | y-axis：定义视图被置于X轴的何处。可能的值：left | center | right | length | %</li>
<li>z-axis：定义视图被置于Z轴的何处。可能的值：length</li>
</ul>
</li>
<li>compatibility<ul>
<li>Internet Explorer 10、Firefox、Opera 支持 transform-origin 属性</li>
<li>Internet Explorer 9 支持替代的 -ms-transform-origin 属性（仅适用于 2D 转换）</li>
<li>Safari 和 Chrome 支持替代的 -webkit-transform-origin 属性（3D 和 2D 转换）</li>
<li>Opera 只支持 2D 转换</li>
</ul>
</li>
</ul>
</li>
<li>transform-style规定如何在3D空间中呈现被嵌套的元素<ul>
<li>grammar:transform-style:flat | preserve-3d</li>
<li>tranform-style默认值：transform-style:flat</li>
<li>compatibility<ul>
<li>Firefox 支持 transform-style 属性</li>
<li>Chrome、Safari 和 Opera 支持替代的 -webkit-transform-style 属性</li>
</ul>
</li>
</ul>
</li>
<li>perspective定义3D元素距视图的距离，以像素计。<ul>
<li>grammar:perspective number | none</li>
<li>perspective默认值：perspective:none</li>
<li>detail<ul>
<li>当为元素定义 perspective 属性时，其子元素会获得透视效果，而不是元素本身</li>
<li>perspective 属性只影响 3D 转换元素</li>
<li>通常和perspective-origin属性配合改变3D元素的底部位置</li>
</ul>
</li>
<li>compatibility<ul>
<li>目前浏览器都不支持 perspective 属性</li>
<li>Chrome 和 Safari 支持替代的 -webkit-perspective 属性</li>
</ul>
</li>
</ul>
</li>
<li>perspective-origin定义 3D 元素所基于的 X 轴和 Y 轴。该属性允许您改变 3D 元素的底部位置<ul>
<li>grammar:perspective-origin:x-axis,y-axis</li>
<li>perspective-origin默认值：perspective-origin:50% 50%</li>
<li>detail<ul>
<li>当为元素定义 perspective-origin 属性时，其子元素会获得透视效果，而不是元素本身</li>
<li>该属性必须与 perspective 属性一同使用，而且只影响 3D 转换元素</li>
</ul>
</li>
<li>compatibility<ul>
<li>目前浏览器都不支持 perspective-origin 属性</li>
<li>Chrome 和 Safari 支持替代的 -webkit-perspecitve-origin 属性</li>
</ul>
</li>
</ul>
</li>
<li>backface-visibility定义当元素不面向屏幕时是否可见<ul>
<li>grammar:backface-visibility: visible | hidden</li>
<li>backface-visibility默认值：backface-visibility:visible</li>
<li>detail<ul>
<li>如果在旋转元素不希望看到其背面时，该属性很有用</li>
</ul>
</li>
<li>compatility<ul>
<li>只有 Internet Explorer 10+ 和 Firefox 支持 backface-visibility 属性</li>
<li>Opera 15+、Safari 和 Chrome 支持替代的 -webkit-backface-visibility 属性</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;some-sites&quot;&gt;&lt;a href=&quot;#some-sites&quot; class=&quot;headerlink&quot; title=&quot;some sites&quot;&gt;&lt;/a&gt;some sites&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3school.com
    
    </summary>
    
    
      <category term="css3" scheme="https://chanran.github.io/tags/css3/"/>
    
      <category term="动画" scheme="https://chanran.github.io/tags/%E5%8A%A8%E7%94%BB/"/>
    
      <category term="animation" scheme="https://chanran.github.io/tags/animation/"/>
    
  </entry>
  
</feed>
